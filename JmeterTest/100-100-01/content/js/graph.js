/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 28800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 28800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 24346.0, "series": [{"data": [[0.0, 91.0], [0.1, 160.0], [0.2, 191.0], [0.3, 226.0], [0.4, 238.0], [0.5, 253.0], [0.6, 259.0], [0.7, 264.0], [0.8, 272.0], [0.9, 276.0], [1.0, 279.0], [1.1, 283.0], [1.2, 286.0], [1.3, 289.0], [1.4, 291.0], [1.5, 295.0], [1.6, 298.0], [1.7, 301.0], [1.8, 305.0], [1.9, 309.0], [2.0, 311.0], [2.1, 313.0], [2.2, 315.0], [2.3, 318.0], [2.4, 320.0], [2.5, 322.0], [2.6, 326.0], [2.7, 329.0], [2.8, 332.0], [2.9, 334.0], [3.0, 337.0], [3.1, 340.0], [3.2, 343.0], [3.3, 345.0], [3.4, 347.0], [3.5, 348.0], [3.6, 352.0], [3.7, 355.0], [3.8, 358.0], [3.9, 359.0], [4.0, 361.0], [4.1, 366.0], [4.2, 367.0], [4.3, 372.0], [4.4, 374.0], [4.5, 376.0], [4.6, 378.0], [4.7, 382.0], [4.8, 386.0], [4.9, 388.0], [5.0, 392.0], [5.1, 398.0], [5.2, 400.0], [5.3, 404.0], [5.4, 407.0], [5.5, 411.0], [5.6, 415.0], [5.7, 419.0], [5.8, 422.0], [5.9, 425.0], [6.0, 430.0], [6.1, 438.0], [6.2, 441.0], [6.3, 443.0], [6.4, 448.0], [6.5, 453.0], [6.6, 457.0], [6.7, 465.0], [6.8, 474.0], [6.9, 481.0], [7.0, 485.0], [7.1, 499.0], [7.2, 512.0], [7.3, 521.0], [7.4, 539.0], [7.5, 547.0], [7.6, 556.0], [7.7, 568.0], [7.8, 588.0], [7.9, 595.0], [8.0, 611.0], [8.1, 628.0], [8.2, 636.0], [8.3, 643.0], [8.4, 654.0], [8.5, 660.0], [8.6, 669.0], [8.7, 676.0], [8.8, 685.0], [8.9, 691.0], [9.0, 698.0], [9.1, 705.0], [9.2, 712.0], [9.3, 716.0], [9.4, 725.0], [9.5, 734.0], [9.6, 738.0], [9.7, 742.0], [9.8, 745.0], [9.9, 751.0], [10.0, 761.0], [10.1, 767.0], [10.2, 772.0], [10.3, 779.0], [10.4, 784.0], [10.5, 792.0], [10.6, 797.0], [10.7, 804.0], [10.8, 809.0], [10.9, 816.0], [11.0, 821.0], [11.1, 829.0], [11.2, 835.0], [11.3, 843.0], [11.4, 850.0], [11.5, 860.0], [11.6, 874.0], [11.7, 882.0], [11.8, 895.0], [11.9, 907.0], [12.0, 917.0], [12.1, 928.0], [12.2, 942.0], [12.3, 946.0], [12.4, 955.0], [12.5, 966.0], [12.6, 976.0], [12.7, 988.0], [12.8, 992.0], [12.9, 1000.0], [13.0, 1006.0], [13.1, 1012.0], [13.2, 1019.0], [13.3, 1025.0], [13.4, 1033.0], [13.5, 1037.0], [13.6, 1041.0], [13.7, 1045.0], [13.8, 1050.0], [13.9, 1054.0], [14.0, 1059.0], [14.1, 1064.0], [14.2, 1069.0], [14.3, 1072.0], [14.4, 1077.0], [14.5, 1079.0], [14.6, 1083.0], [14.7, 1087.0], [14.8, 1091.0], [14.9, 1096.0], [15.0, 1102.0], [15.1, 1105.0], [15.2, 1109.0], [15.3, 1113.0], [15.4, 1116.0], [15.5, 1119.0], [15.6, 1123.0], [15.7, 1127.0], [15.8, 1129.0], [15.9, 1133.0], [16.0, 1135.0], [16.1, 1138.0], [16.2, 1144.0], [16.3, 1149.0], [16.4, 1152.0], [16.5, 1157.0], [16.6, 1158.0], [16.7, 1164.0], [16.8, 1166.0], [16.9, 1172.0], [17.0, 1177.0], [17.1, 1181.0], [17.2, 1187.0], [17.3, 1192.0], [17.4, 1195.0], [17.5, 1199.0], [17.6, 1203.0], [17.7, 1207.0], [17.8, 1212.0], [17.9, 1217.0], [18.0, 1222.0], [18.1, 1227.0], [18.2, 1232.0], [18.3, 1237.0], [18.4, 1247.0], [18.5, 1250.0], [18.6, 1256.0], [18.7, 1261.0], [18.8, 1266.0], [18.9, 1273.0], [19.0, 1279.0], [19.1, 1282.0], [19.2, 1285.0], [19.3, 1288.0], [19.4, 1293.0], [19.5, 1296.0], [19.6, 1302.0], [19.7, 1308.0], [19.8, 1313.0], [19.9, 1318.0], [20.0, 1322.0], [20.1, 1326.0], [20.2, 1335.0], [20.3, 1341.0], [20.4, 1344.0], [20.5, 1348.0], [20.6, 1352.0], [20.7, 1357.0], [20.8, 1361.0], [20.9, 1367.0], [21.0, 1372.0], [21.1, 1377.0], [21.2, 1382.0], [21.3, 1385.0], [21.4, 1387.0], [21.5, 1391.0], [21.6, 1398.0], [21.7, 1404.0], [21.8, 1407.0], [21.9, 1412.0], [22.0, 1416.0], [22.1, 1421.0], [22.2, 1427.0], [22.3, 1434.0], [22.4, 1436.0], [22.5, 1440.0], [22.6, 1446.0], [22.7, 1450.0], [22.8, 1454.0], [22.9, 1459.0], [23.0, 1461.0], [23.1, 1463.0], [23.2, 1467.0], [23.3, 1469.0], [23.4, 1474.0], [23.5, 1480.0], [23.6, 1484.0], [23.7, 1490.0], [23.8, 1493.0], [23.9, 1496.0], [24.0, 1500.0], [24.1, 1505.0], [24.2, 1513.0], [24.3, 1519.0], [24.4, 1525.0], [24.5, 1529.0], [24.6, 1533.0], [24.7, 1536.0], [24.8, 1541.0], [24.9, 1545.0], [25.0, 1551.0], [25.1, 1557.0], [25.2, 1561.0], [25.3, 1564.0], [25.4, 1569.0], [25.5, 1573.0], [25.6, 1576.0], [25.7, 1579.0], [25.8, 1582.0], [25.9, 1587.0], [26.0, 1591.0], [26.1, 1594.0], [26.2, 1598.0], [26.3, 1601.0], [26.4, 1604.0], [26.5, 1607.0], [26.6, 1610.0], [26.7, 1613.0], [26.8, 1619.0], [26.9, 1624.0], [27.0, 1628.0], [27.1, 1631.0], [27.2, 1634.0], [27.3, 1639.0], [27.4, 1643.0], [27.5, 1648.0], [27.6, 1651.0], [27.7, 1653.0], [27.8, 1658.0], [27.9, 1661.0], [28.0, 1665.0], [28.1, 1668.0], [28.2, 1672.0], [28.3, 1677.0], [28.4, 1682.0], [28.5, 1685.0], [28.6, 1688.0], [28.7, 1691.0], [28.8, 1695.0], [28.9, 1699.0], [29.0, 1703.0], [29.1, 1710.0], [29.2, 1716.0], [29.3, 1720.0], [29.4, 1725.0], [29.5, 1727.0], [29.6, 1734.0], [29.7, 1741.0], [29.8, 1745.0], [29.9, 1750.0], [30.0, 1757.0], [30.1, 1761.0], [30.2, 1767.0], [30.3, 1770.0], [30.4, 1775.0], [30.5, 1780.0], [30.6, 1785.0], [30.7, 1789.0], [30.8, 1791.0], [30.9, 1796.0], [31.0, 1802.0], [31.1, 1806.0], [31.2, 1809.0], [31.3, 1811.0], [31.4, 1815.0], [31.5, 1819.0], [31.6, 1823.0], [31.7, 1828.0], [31.8, 1830.0], [31.9, 1836.0], [32.0, 1839.0], [32.1, 1843.0], [32.2, 1849.0], [32.3, 1854.0], [32.4, 1857.0], [32.5, 1861.0], [32.6, 1866.0], [32.7, 1869.0], [32.8, 1873.0], [32.9, 1876.0], [33.0, 1879.0], [33.1, 1882.0], [33.2, 1884.0], [33.3, 1887.0], [33.4, 1893.0], [33.5, 1897.0], [33.6, 1900.0], [33.7, 1904.0], [33.8, 1911.0], [33.9, 1917.0], [34.0, 1919.0], [34.1, 1923.0], [34.2, 1926.0], [34.3, 1929.0], [34.4, 1935.0], [34.5, 1938.0], [34.6, 1943.0], [34.7, 1946.0], [34.8, 1951.0], [34.9, 1955.0], [35.0, 1958.0], [35.1, 1961.0], [35.2, 1965.0], [35.3, 1967.0], [35.4, 1969.0], [35.5, 1975.0], [35.6, 1978.0], [35.7, 1982.0], [35.8, 1985.0], [35.9, 1988.0], [36.0, 1990.0], [36.1, 1993.0], [36.2, 1999.0], [36.3, 2001.0], [36.4, 2005.0], [36.5, 2009.0], [36.6, 2012.0], [36.7, 2015.0], [36.8, 2020.0], [36.9, 2023.0], [37.0, 2028.0], [37.1, 2032.0], [37.2, 2037.0], [37.3, 2042.0], [37.4, 2045.0], [37.5, 2048.0], [37.6, 2053.0], [37.7, 2057.0], [37.8, 2062.0], [37.9, 2065.0], [38.0, 2068.0], [38.1, 2071.0], [38.2, 2075.0], [38.3, 2078.0], [38.4, 2082.0], [38.5, 2087.0], [38.6, 2092.0], [38.7, 2097.0], [38.8, 2101.0], [38.9, 2104.0], [39.0, 2108.0], [39.1, 2111.0], [39.2, 2117.0], [39.3, 2124.0], [39.4, 2128.0], [39.5, 2132.0], [39.6, 2141.0], [39.7, 2144.0], [39.8, 2147.0], [39.9, 2148.0], [40.0, 2152.0], [40.1, 2158.0], [40.2, 2165.0], [40.3, 2169.0], [40.4, 2173.0], [40.5, 2179.0], [40.6, 2183.0], [40.7, 2190.0], [40.8, 2195.0], [40.9, 2200.0], [41.0, 2203.0], [41.1, 2210.0], [41.2, 2215.0], [41.3, 2219.0], [41.4, 2225.0], [41.5, 2227.0], [41.6, 2233.0], [41.7, 2237.0], [41.8, 2243.0], [41.9, 2250.0], [42.0, 2254.0], [42.1, 2261.0], [42.2, 2267.0], [42.3, 2271.0], [42.4, 2275.0], [42.5, 2279.0], [42.6, 2285.0], [42.7, 2291.0], [42.8, 2297.0], [42.9, 2300.0], [43.0, 2304.0], [43.1, 2307.0], [43.2, 2312.0], [43.3, 2314.0], [43.4, 2318.0], [43.5, 2322.0], [43.6, 2327.0], [43.7, 2331.0], [43.8, 2339.0], [43.9, 2343.0], [44.0, 2347.0], [44.1, 2351.0], [44.2, 2355.0], [44.3, 2358.0], [44.4, 2362.0], [44.5, 2367.0], [44.6, 2371.0], [44.7, 2373.0], [44.8, 2377.0], [44.9, 2383.0], [45.0, 2387.0], [45.1, 2392.0], [45.2, 2398.0], [45.3, 2402.0], [45.4, 2406.0], [45.5, 2408.0], [45.6, 2413.0], [45.7, 2416.0], [45.8, 2422.0], [45.9, 2428.0], [46.0, 2433.0], [46.1, 2438.0], [46.2, 2445.0], [46.3, 2450.0], [46.4, 2455.0], [46.5, 2466.0], [46.6, 2471.0], [46.7, 2479.0], [46.8, 2485.0], [46.9, 2492.0], [47.0, 2497.0], [47.1, 2502.0], [47.2, 2507.0], [47.3, 2511.0], [47.4, 2516.0], [47.5, 2519.0], [47.6, 2524.0], [47.7, 2529.0], [47.8, 2535.0], [47.9, 2541.0], [48.0, 2546.0], [48.1, 2550.0], [48.2, 2552.0], [48.3, 2556.0], [48.4, 2562.0], [48.5, 2569.0], [48.6, 2573.0], [48.7, 2581.0], [48.8, 2585.0], [48.9, 2593.0], [49.0, 2599.0], [49.1, 2603.0], [49.2, 2605.0], [49.3, 2612.0], [49.4, 2619.0], [49.5, 2629.0], [49.6, 2636.0], [49.7, 2643.0], [49.8, 2650.0], [49.9, 2660.0], [50.0, 2668.0], [50.1, 2670.0], [50.2, 2676.0], [50.3, 2684.0], [50.4, 2691.0], [50.5, 2699.0], [50.6, 2702.0], [50.7, 2710.0], [50.8, 2714.0], [50.9, 2719.0], [51.0, 2725.0], [51.1, 2729.0], [51.2, 2735.0], [51.3, 2739.0], [51.4, 2744.0], [51.5, 2749.0], [51.6, 2754.0], [51.7, 2762.0], [51.8, 2773.0], [51.9, 2782.0], [52.0, 2791.0], [52.1, 2798.0], [52.2, 2803.0], [52.3, 2808.0], [52.4, 2813.0], [52.5, 2816.0], [52.6, 2821.0], [52.7, 2827.0], [52.8, 2835.0], [52.9, 2842.0], [53.0, 2850.0], [53.1, 2860.0], [53.2, 2867.0], [53.3, 2871.0], [53.4, 2876.0], [53.5, 2883.0], [53.6, 2887.0], [53.7, 2895.0], [53.8, 2903.0], [53.9, 2907.0], [54.0, 2916.0], [54.1, 2920.0], [54.2, 2927.0], [54.3, 2934.0], [54.4, 2940.0], [54.5, 2950.0], [54.6, 2957.0], [54.7, 2966.0], [54.8, 2974.0], [54.9, 2982.0], [55.0, 2989.0], [55.1, 2997.0], [55.2, 3001.0], [55.3, 3004.0], [55.4, 3009.0], [55.5, 3016.0], [55.6, 3025.0], [55.7, 3034.0], [55.8, 3045.0], [55.9, 3049.0], [56.0, 3051.0], [56.1, 3059.0], [56.2, 3065.0], [56.3, 3072.0], [56.4, 3077.0], [56.5, 3083.0], [56.6, 3090.0], [56.7, 3096.0], [56.8, 3103.0], [56.9, 3106.0], [57.0, 3112.0], [57.1, 3117.0], [57.2, 3122.0], [57.3, 3126.0], [57.4, 3137.0], [57.5, 3143.0], [57.6, 3149.0], [57.7, 3153.0], [57.8, 3157.0], [57.9, 3164.0], [58.0, 3171.0], [58.1, 3178.0], [58.2, 3183.0], [58.3, 3192.0], [58.4, 3199.0], [58.5, 3202.0], [58.6, 3206.0], [58.7, 3213.0], [58.8, 3217.0], [58.9, 3223.0], [59.0, 3230.0], [59.1, 3236.0], [59.2, 3242.0], [59.3, 3246.0], [59.4, 3251.0], [59.5, 3257.0], [59.6, 3262.0], [59.7, 3268.0], [59.8, 3272.0], [59.9, 3275.0], [60.0, 3278.0], [60.1, 3284.0], [60.2, 3288.0], [60.3, 3292.0], [60.4, 3297.0], [60.5, 3300.0], [60.6, 3303.0], [60.7, 3305.0], [60.8, 3309.0], [60.9, 3311.0], [61.0, 3314.0], [61.1, 3318.0], [61.2, 3321.0], [61.3, 3323.0], [61.4, 3330.0], [61.5, 3332.0], [61.6, 3335.0], [61.7, 3336.0], [61.8, 3340.0], [61.9, 3343.0], [62.0, 3346.0], [62.1, 3350.0], [62.2, 3352.0], [62.3, 3355.0], [62.4, 3357.0], [62.5, 3360.0], [62.6, 3364.0], [62.7, 3366.0], [62.8, 3368.0], [62.9, 3371.0], [63.0, 3373.0], [63.1, 3377.0], [63.2, 3380.0], [63.3, 3382.0], [63.4, 3385.0], [63.5, 3390.0], [63.6, 3395.0], [63.7, 3399.0], [63.8, 3405.0], [63.9, 3410.0], [64.0, 3415.0], [64.1, 3419.0], [64.2, 3424.0], [64.3, 3429.0], [64.4, 3434.0], [64.5, 3438.0], [64.6, 3441.0], [64.7, 3444.0], [64.8, 3448.0], [64.9, 3451.0], [65.0, 3456.0], [65.1, 3459.0], [65.2, 3464.0], [65.3, 3468.0], [65.4, 3473.0], [65.5, 3477.0], [65.6, 3480.0], [65.7, 3487.0], [65.8, 3496.0], [65.9, 3499.0], [66.0, 3506.0], [66.1, 3512.0], [66.2, 3516.0], [66.3, 3521.0], [66.4, 3525.0], [66.5, 3532.0], [66.6, 3537.0], [66.7, 3542.0], [66.8, 3545.0], [66.9, 3551.0], [67.0, 3558.0], [67.1, 3563.0], [67.2, 3567.0], [67.3, 3572.0], [67.4, 3578.0], [67.5, 3587.0], [67.6, 3593.0], [67.7, 3599.0], [67.8, 3603.0], [67.9, 3608.0], [68.0, 3614.0], [68.1, 3618.0], [68.2, 3623.0], [68.3, 3630.0], [68.4, 3636.0], [68.5, 3641.0], [68.6, 3650.0], [68.7, 3654.0], [68.8, 3658.0], [68.9, 3663.0], [69.0, 3666.0], [69.1, 3672.0], [69.2, 3678.0], [69.3, 3684.0], [69.4, 3691.0], [69.5, 3693.0], [69.6, 3702.0], [69.7, 3709.0], [69.8, 3714.0], [69.9, 3719.0], [70.0, 3725.0], [70.1, 3729.0], [70.2, 3739.0], [70.3, 3745.0], [70.4, 3755.0], [70.5, 3761.0], [70.6, 3770.0], [70.7, 3776.0], [70.8, 3787.0], [70.9, 3790.0], [71.0, 3795.0], [71.1, 3806.0], [71.2, 3815.0], [71.3, 3823.0], [71.4, 3828.0], [71.5, 3833.0], [71.6, 3841.0], [71.7, 3850.0], [71.8, 3860.0], [71.9, 3863.0], [72.0, 3868.0], [72.1, 3873.0], [72.2, 3886.0], [72.3, 3896.0], [72.4, 3908.0], [72.5, 3918.0], [72.6, 3928.0], [72.7, 3939.0], [72.8, 3948.0], [72.9, 3955.0], [73.0, 3965.0], [73.1, 3978.0], [73.2, 3986.0], [73.3, 3996.0], [73.4, 4009.0], [73.5, 4015.0], [73.6, 4028.0], [73.7, 4039.0], [73.8, 4047.0], [73.9, 4053.0], [74.0, 4070.0], [74.1, 4075.0], [74.2, 4083.0], [74.3, 4091.0], [74.4, 4099.0], [74.5, 4110.0], [74.6, 4119.0], [74.7, 4126.0], [74.8, 4132.0], [74.9, 4141.0], [75.0, 4150.0], [75.1, 4157.0], [75.2, 4167.0], [75.3, 4174.0], [75.4, 4182.0], [75.5, 4191.0], [75.6, 4198.0], [75.7, 4207.0], [75.8, 4215.0], [75.9, 4227.0], [76.0, 4237.0], [76.1, 4244.0], [76.2, 4249.0], [76.3, 4257.0], [76.4, 4261.0], [76.5, 4270.0], [76.6, 4277.0], [76.7, 4282.0], [76.8, 4287.0], [76.9, 4293.0], [77.0, 4303.0], [77.1, 4311.0], [77.2, 4315.0], [77.3, 4322.0], [77.4, 4337.0], [77.5, 4343.0], [77.6, 4352.0], [77.7, 4358.0], [77.8, 4361.0], [77.9, 4368.0], [78.0, 4374.0], [78.1, 4379.0], [78.2, 4384.0], [78.3, 4393.0], [78.4, 4397.0], [78.5, 4407.0], [78.6, 4413.0], [78.7, 4418.0], [78.8, 4423.0], [78.9, 4428.0], [79.0, 4435.0], [79.1, 4440.0], [79.2, 4446.0], [79.3, 4456.0], [79.4, 4464.0], [79.5, 4468.0], [79.6, 4474.0], [79.7, 4483.0], [79.8, 4491.0], [79.9, 4497.0], [80.0, 4505.0], [80.1, 4510.0], [80.2, 4519.0], [80.3, 4525.0], [80.4, 4530.0], [80.5, 4537.0], [80.6, 4542.0], [80.7, 4555.0], [80.8, 4564.0], [80.9, 4570.0], [81.0, 4578.0], [81.1, 4584.0], [81.2, 4595.0], [81.3, 4602.0], [81.4, 4612.0], [81.5, 4618.0], [81.6, 4624.0], [81.7, 4631.0], [81.8, 4642.0], [81.9, 4651.0], [82.0, 4660.0], [82.1, 4665.0], [82.2, 4673.0], [82.3, 4684.0], [82.4, 4703.0], [82.5, 4717.0], [82.6, 4730.0], [82.7, 4746.0], [82.8, 4774.0], [82.9, 4794.0], [83.0, 4816.0], [83.1, 4848.0], [83.2, 4867.0], [83.3, 4899.0], [83.4, 4913.0], [83.5, 4941.0], [83.6, 4964.0], [83.7, 4989.0], [83.8, 5031.0], [83.9, 5045.0], [84.0, 5071.0], [84.1, 5087.0], [84.2, 5120.0], [84.3, 5135.0], [84.4, 5148.0], [84.5, 5162.0], [84.6, 5170.0], [84.7, 5181.0], [84.8, 5191.0], [84.9, 5201.0], [85.0, 5217.0], [85.1, 5232.0], [85.2, 5237.0], [85.3, 5253.0], [85.4, 5264.0], [85.5, 5277.0], [85.6, 5284.0], [85.7, 5294.0], [85.8, 5300.0], [85.9, 5309.0], [86.0, 5315.0], [86.1, 5320.0], [86.2, 5324.0], [86.3, 5328.0], [86.4, 5334.0], [86.5, 5340.0], [86.6, 5344.0], [86.7, 5349.0], [86.8, 5354.0], [86.9, 5360.0], [87.0, 5364.0], [87.1, 5369.0], [87.2, 5374.0], [87.3, 5380.0], [87.4, 5384.0], [87.5, 5390.0], [87.6, 5394.0], [87.7, 5397.0], [87.8, 5402.0], [87.9, 5405.0], [88.0, 5411.0], [88.1, 5416.0], [88.2, 5422.0], [88.3, 5429.0], [88.4, 5435.0], [88.5, 5441.0], [88.6, 5448.0], [88.7, 5455.0], [88.8, 5460.0], [88.9, 5469.0], [89.0, 5474.0], [89.1, 5481.0], [89.2, 5489.0], [89.3, 5494.0], [89.4, 5501.0], [89.5, 5505.0], [89.6, 5511.0], [89.7, 5517.0], [89.8, 5522.0], [89.9, 5533.0], [90.0, 5542.0], [90.1, 5550.0], [90.2, 5556.0], [90.3, 5563.0], [90.4, 5576.0], [90.5, 5590.0], [90.6, 5604.0], [90.7, 5619.0], [90.8, 5641.0], [90.9, 5658.0], [91.0, 5699.0], [91.1, 5721.0], [91.2, 5758.0], [91.3, 5841.0], [91.4, 5885.0], [91.5, 5931.0], [91.6, 6027.0], [91.7, 6074.0], [91.8, 6103.0], [91.9, 6122.0], [92.0, 6128.0], [92.1, 6136.0], [92.2, 6144.0], [92.3, 6151.0], [92.4, 6157.0], [92.5, 6163.0], [92.6, 6168.0], [92.7, 6172.0], [92.8, 6180.0], [92.9, 6185.0], [93.0, 6191.0], [93.1, 6195.0], [93.2, 6198.0], [93.3, 6205.0], [93.4, 6212.0], [93.5, 6219.0], [93.6, 6228.0], [93.7, 6233.0], [93.8, 6240.0], [93.9, 6245.0], [94.0, 6251.0], [94.1, 6259.0], [94.2, 6266.0], [94.3, 6270.0], [94.4, 6277.0], [94.5, 6282.0], [94.6, 6288.0], [94.7, 6291.0], [94.8, 6295.0], [94.9, 6301.0], [95.0, 6308.0], [95.1, 6315.0], [95.2, 6321.0], [95.3, 6325.0], [95.4, 6335.0], [95.5, 6339.0], [95.6, 6347.0], [95.7, 6352.0], [95.8, 6370.0], [95.9, 6387.0], [96.0, 6404.0], [96.1, 6431.0], [96.2, 6453.0], [96.3, 6507.0], [96.4, 6584.0], [96.5, 6646.0], [96.6, 6787.0], [96.7, 6926.0], [96.8, 7030.0], [96.9, 7078.0], [97.0, 7122.0], [97.1, 7218.0], [97.2, 7332.0], [97.3, 7516.0], [97.4, 7696.0], [97.5, 7939.0], [97.6, 8087.0], [97.7, 8313.0], [97.8, 8513.0], [97.9, 9136.0], [98.0, 9656.0], [98.1, 9917.0], [98.2, 10027.0], [98.3, 10300.0], [98.4, 10504.0], [98.5, 10614.0], [98.6, 11072.0], [98.7, 11276.0], [98.8, 11319.0], [98.9, 11439.0], [99.0, 12113.0], [99.1, 12131.0], [99.2, 12144.0], [99.3, 12161.0], [99.4, 12173.0], [99.5, 12181.0], [99.6, 12200.0], [99.7, 12234.0], [99.8, 12293.0], [99.9, 15107.0], [100.0, 24346.0]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[0.0, 49.0], [0.1, 69.0], [0.2, 91.0], [0.3, 100.0], [0.4, 107.0], [0.5, 110.0], [0.6, 113.0], [0.7, 116.0], [0.8, 118.0], [0.9, 121.0], [1.0, 123.0], [1.1, 125.0], [1.2, 127.0], [1.3, 127.0], [1.4, 129.0], [1.5, 130.0], [1.6, 132.0], [1.7, 133.0], [1.8, 134.0], [1.9, 135.0], [2.0, 135.0], [2.1, 137.0], [2.2, 138.0], [2.3, 139.0], [2.4, 140.0], [2.5, 141.0], [2.6, 142.0], [2.7, 143.0], [2.8, 144.0], [2.9, 144.0], [3.0, 145.0], [3.1, 146.0], [3.2, 148.0], [3.3, 149.0], [3.4, 150.0], [3.5, 152.0], [3.6, 152.0], [3.7, 153.0], [3.8, 154.0], [3.9, 155.0], [4.0, 156.0], [4.1, 157.0], [4.2, 159.0], [4.3, 160.0], [4.4, 161.0], [4.5, 162.0], [4.6, 163.0], [4.7, 164.0], [4.8, 165.0], [4.9, 166.0], [5.0, 167.0], [5.1, 168.0], [5.2, 169.0], [5.3, 170.0], [5.4, 171.0], [5.5, 172.0], [5.6, 173.0], [5.7, 174.0], [5.8, 175.0], [5.9, 175.0], [6.0, 176.0], [6.1, 178.0], [6.2, 179.0], [6.3, 179.0], [6.4, 180.0], [6.5, 181.0], [6.6, 182.0], [6.7, 183.0], [6.8, 184.0], [6.9, 185.0], [7.0, 186.0], [7.1, 187.0], [7.2, 188.0], [7.3, 189.0], [7.4, 190.0], [7.5, 191.0], [7.6, 192.0], [7.7, 194.0], [7.8, 195.0], [7.9, 197.0], [8.0, 198.0], [8.1, 200.0], [8.2, 202.0], [8.3, 203.0], [8.4, 204.0], [8.5, 206.0], [8.6, 207.0], [8.7, 208.0], [8.8, 211.0], [8.9, 212.0], [9.0, 213.0], [9.1, 215.0], [9.2, 217.0], [9.3, 219.0], [9.4, 221.0], [9.5, 222.0], [9.6, 223.0], [9.7, 225.0], [9.8, 226.0], [9.9, 228.0], [10.0, 229.0], [10.1, 231.0], [10.2, 233.0], [10.3, 235.0], [10.4, 238.0], [10.5, 239.0], [10.6, 242.0], [10.7, 243.0], [10.8, 247.0], [10.9, 248.0], [11.0, 249.0], [11.1, 252.0], [11.2, 255.0], [11.3, 258.0], [11.4, 261.0], [11.5, 265.0], [11.6, 266.0], [11.7, 270.0], [11.8, 273.0], [11.9, 276.0], [12.0, 280.0], [12.1, 283.0], [12.2, 288.0], [12.3, 289.0], [12.4, 293.0], [12.5, 298.0], [12.6, 303.0], [12.7, 307.0], [12.8, 312.0], [12.9, 316.0], [13.0, 325.0], [13.1, 328.0], [13.2, 337.0], [13.3, 345.0], [13.4, 351.0], [13.5, 356.0], [13.6, 366.0], [13.7, 378.0], [13.8, 391.0], [13.9, 401.0], [14.0, 410.0], [14.1, 421.0], [14.2, 437.0], [14.3, 446.0], [14.4, 452.0], [14.5, 458.0], [14.6, 464.0], [14.7, 471.0], [14.8, 479.0], [14.9, 482.0], [15.0, 485.0], [15.1, 488.0], [15.2, 491.0], [15.3, 495.0], [15.4, 498.0], [15.5, 501.0], [15.6, 503.0], [15.7, 506.0], [15.8, 508.0], [15.9, 510.0], [16.0, 512.0], [16.1, 514.0], [16.2, 516.0], [16.3, 518.0], [16.4, 519.0], [16.5, 521.0], [16.6, 523.0], [16.7, 525.0], [16.8, 526.0], [16.9, 529.0], [17.0, 530.0], [17.1, 533.0], [17.2, 535.0], [17.3, 536.0], [17.4, 537.0], [17.5, 539.0], [17.6, 540.0], [17.7, 542.0], [17.8, 544.0], [17.9, 547.0], [18.0, 550.0], [18.1, 551.0], [18.2, 554.0], [18.3, 555.0], [18.4, 558.0], [18.5, 560.0], [18.6, 561.0], [18.7, 563.0], [18.8, 567.0], [18.9, 568.0], [19.0, 569.0], [19.1, 572.0], [19.2, 573.0], [19.3, 575.0], [19.4, 576.0], [19.5, 578.0], [19.6, 580.0], [19.7, 582.0], [19.8, 585.0], [19.9, 586.0], [20.0, 590.0], [20.1, 594.0], [20.2, 597.0], [20.3, 600.0], [20.4, 603.0], [20.5, 607.0], [20.6, 609.0], [20.7, 614.0], [20.8, 617.0], [20.9, 620.0], [21.0, 624.0], [21.1, 628.0], [21.2, 632.0], [21.3, 636.0], [21.4, 644.0], [21.5, 649.0], [21.6, 657.0], [21.7, 665.0], [21.8, 671.0], [21.9, 678.0], [22.0, 683.0], [22.1, 692.0], [22.2, 700.0], [22.3, 707.0], [22.4, 712.0], [22.5, 719.0], [22.6, 722.0], [22.7, 727.0], [22.8, 732.0], [22.9, 735.0], [23.0, 742.0], [23.1, 747.0], [23.2, 751.0], [23.3, 753.0], [23.4, 757.0], [23.5, 762.0], [23.6, 766.0], [23.7, 771.0], [23.8, 774.0], [23.9, 776.0], [24.0, 779.0], [24.1, 782.0], [24.2, 785.0], [24.3, 788.0], [24.4, 791.0], [24.5, 794.0], [24.6, 797.0], [24.7, 800.0], [24.8, 802.0], [24.9, 804.0], [25.0, 807.0], [25.1, 809.0], [25.2, 811.0], [25.3, 813.0], [25.4, 816.0], [25.5, 817.0], [25.6, 820.0], [25.7, 821.0], [25.8, 823.0], [25.9, 827.0], [26.0, 829.0], [26.1, 832.0], [26.2, 834.0], [26.3, 836.0], [26.4, 839.0], [26.5, 840.0], [26.6, 843.0], [26.7, 845.0], [26.8, 846.0], [26.9, 848.0], [27.0, 849.0], [27.1, 851.0], [27.2, 852.0], [27.3, 853.0], [27.4, 855.0], [27.5, 856.0], [27.6, 858.0], [27.7, 861.0], [27.8, 864.0], [27.9, 865.0], [28.0, 866.0], [28.1, 867.0], [28.2, 869.0], [28.3, 871.0], [28.4, 872.0], [28.5, 875.0], [28.6, 876.0], [28.7, 877.0], [28.8, 878.0], [28.9, 879.0], [29.0, 881.0], [29.1, 882.0], [29.2, 884.0], [29.3, 886.0], [29.4, 887.0], [29.5, 890.0], [29.6, 892.0], [29.7, 893.0], [29.8, 893.0], [29.9, 894.0], [30.0, 895.0], [30.1, 896.0], [30.2, 897.0], [30.3, 899.0], [30.4, 900.0], [30.5, 901.0], [30.6, 903.0], [30.7, 904.0], [30.8, 905.0], [30.9, 907.0], [31.0, 908.0], [31.1, 909.0], [31.2, 911.0], [31.3, 912.0], [31.4, 913.0], [31.5, 913.0], [31.6, 915.0], [31.7, 916.0], [31.8, 917.0], [31.9, 918.0], [32.0, 919.0], [32.1, 920.0], [32.2, 921.0], [32.3, 922.0], [32.4, 923.0], [32.5, 924.0], [32.6, 925.0], [32.7, 927.0], [32.8, 928.0], [32.9, 930.0], [33.0, 931.0], [33.1, 932.0], [33.2, 934.0], [33.3, 935.0], [33.4, 936.0], [33.5, 937.0], [33.6, 939.0], [33.7, 940.0], [33.8, 941.0], [33.9, 942.0], [34.0, 944.0], [34.1, 945.0], [34.2, 946.0], [34.3, 947.0], [34.4, 948.0], [34.5, 950.0], [34.6, 951.0], [34.7, 953.0], [34.8, 954.0], [34.9, 955.0], [35.0, 956.0], [35.1, 958.0], [35.2, 959.0], [35.3, 960.0], [35.4, 961.0], [35.5, 962.0], [35.6, 964.0], [35.7, 965.0], [35.8, 968.0], [35.9, 970.0], [36.0, 971.0], [36.1, 972.0], [36.2, 974.0], [36.3, 975.0], [36.4, 977.0], [36.5, 978.0], [36.6, 979.0], [36.7, 979.0], [36.8, 981.0], [36.9, 983.0], [37.0, 985.0], [37.1, 987.0], [37.2, 991.0], [37.3, 992.0], [37.4, 994.0], [37.5, 995.0], [37.6, 997.0], [37.7, 999.0], [37.8, 1000.0], [37.9, 1004.0], [38.0, 1004.0], [38.1, 1005.0], [38.2, 1007.0], [38.3, 1008.0], [38.4, 1011.0], [38.5, 1013.0], [38.6, 1016.0], [38.7, 1018.0], [38.8, 1020.0], [38.9, 1022.0], [39.0, 1023.0], [39.1, 1026.0], [39.2, 1027.0], [39.3, 1028.0], [39.4, 1029.0], [39.5, 1031.0], [39.6, 1033.0], [39.7, 1034.0], [39.8, 1036.0], [39.9, 1037.0], [40.0, 1039.0], [40.1, 1042.0], [40.2, 1043.0], [40.3, 1045.0], [40.4, 1047.0], [40.5, 1048.0], [40.6, 1049.0], [40.7, 1052.0], [40.8, 1055.0], [40.9, 1057.0], [41.0, 1059.0], [41.1, 1060.0], [41.2, 1062.0], [41.3, 1064.0], [41.4, 1067.0], [41.5, 1069.0], [41.6, 1071.0], [41.7, 1076.0], [41.8, 1078.0], [41.9, 1080.0], [42.0, 1081.0], [42.1, 1083.0], [42.2, 1084.0], [42.3, 1086.0], [42.4, 1088.0], [42.5, 1090.0], [42.6, 1092.0], [42.7, 1094.0], [42.8, 1096.0], [42.9, 1098.0], [43.0, 1099.0], [43.1, 1101.0], [43.2, 1104.0], [43.3, 1105.0], [43.4, 1107.0], [43.5, 1108.0], [43.6, 1110.0], [43.7, 1112.0], [43.8, 1115.0], [43.9, 1116.0], [44.0, 1119.0], [44.1, 1120.0], [44.2, 1121.0], [44.3, 1123.0], [44.4, 1126.0], [44.5, 1128.0], [44.6, 1130.0], [44.7, 1132.0], [44.8, 1133.0], [44.9, 1135.0], [45.0, 1138.0], [45.1, 1141.0], [45.2, 1144.0], [45.3, 1147.0], [45.4, 1148.0], [45.5, 1151.0], [45.6, 1155.0], [45.7, 1156.0], [45.8, 1158.0], [45.9, 1160.0], [46.0, 1161.0], [46.1, 1164.0], [46.2, 1166.0], [46.3, 1168.0], [46.4, 1171.0], [46.5, 1173.0], [46.6, 1176.0], [46.7, 1177.0], [46.8, 1178.0], [46.9, 1182.0], [47.0, 1185.0], [47.1, 1188.0], [47.2, 1191.0], [47.3, 1193.0], [47.4, 1196.0], [47.5, 1199.0], [47.6, 1200.0], [47.7, 1202.0], [47.8, 1204.0], [47.9, 1209.0], [48.0, 1211.0], [48.1, 1214.0], [48.2, 1218.0], [48.3, 1220.0], [48.4, 1223.0], [48.5, 1226.0], [48.6, 1228.0], [48.7, 1230.0], [48.8, 1231.0], [48.9, 1233.0], [49.0, 1235.0], [49.1, 1237.0], [49.2, 1240.0], [49.3, 1243.0], [49.4, 1246.0], [49.5, 1250.0], [49.6, 1252.0], [49.7, 1255.0], [49.8, 1257.0], [49.9, 1263.0], [50.0, 1266.0], [50.1, 1268.0], [50.2, 1276.0], [50.3, 1279.0], [50.4, 1284.0], [50.5, 1287.0], [50.6, 1290.0], [50.7, 1292.0], [50.8, 1293.0], [50.9, 1299.0], [51.0, 1303.0], [51.1, 1305.0], [51.2, 1312.0], [51.3, 1314.0], [51.4, 1318.0], [51.5, 1321.0], [51.6, 1324.0], [51.7, 1327.0], [51.8, 1329.0], [51.9, 1331.0], [52.0, 1334.0], [52.1, 1336.0], [52.2, 1339.0], [52.3, 1341.0], [52.4, 1343.0], [52.5, 1344.0], [52.6, 1345.0], [52.7, 1347.0], [52.8, 1349.0], [52.9, 1351.0], [53.0, 1353.0], [53.1, 1356.0], [53.2, 1359.0], [53.3, 1361.0], [53.4, 1364.0], [53.5, 1365.0], [53.6, 1368.0], [53.7, 1368.0], [53.8, 1371.0], [53.9, 1372.0], [54.0, 1375.0], [54.1, 1376.0], [54.2, 1379.0], [54.3, 1381.0], [54.4, 1384.0], [54.5, 1385.0], [54.6, 1387.0], [54.7, 1389.0], [54.8, 1392.0], [54.9, 1394.0], [55.0, 1397.0], [55.1, 1398.0], [55.2, 1401.0], [55.3, 1404.0], [55.4, 1406.0], [55.5, 1409.0], [55.6, 1412.0], [55.7, 1415.0], [55.8, 1417.0], [55.9, 1419.0], [56.0, 1422.0], [56.1, 1424.0], [56.2, 1426.0], [56.3, 1428.0], [56.4, 1429.0], [56.5, 1432.0], [56.6, 1433.0], [56.7, 1435.0], [56.8, 1437.0], [56.9, 1439.0], [57.0, 1441.0], [57.1, 1443.0], [57.2, 1445.0], [57.3, 1447.0], [57.4, 1448.0], [57.5, 1451.0], [57.6, 1454.0], [57.7, 1457.0], [57.8, 1459.0], [57.9, 1460.0], [58.0, 1462.0], [58.1, 1464.0], [58.2, 1466.0], [58.3, 1469.0], [58.4, 1471.0], [58.5, 1473.0], [58.6, 1475.0], [58.7, 1477.0], [58.8, 1478.0], [58.9, 1480.0], [59.0, 1484.0], [59.1, 1485.0], [59.2, 1489.0], [59.3, 1491.0], [59.4, 1492.0], [59.5, 1494.0], [59.6, 1498.0], [59.7, 1500.0], [59.8, 1502.0], [59.9, 1506.0], [60.0, 1510.0], [60.1, 1514.0], [60.2, 1518.0], [60.3, 1523.0], [60.4, 1528.0], [60.5, 1532.0], [60.6, 1534.0], [60.7, 1537.0], [60.8, 1540.0], [60.9, 1543.0], [61.0, 1547.0], [61.1, 1549.0], [61.2, 1552.0], [61.3, 1555.0], [61.4, 1557.0], [61.5, 1562.0], [61.6, 1567.0], [61.7, 1570.0], [61.8, 1574.0], [61.9, 1577.0], [62.0, 1580.0], [62.1, 1585.0], [62.2, 1589.0], [62.3, 1595.0], [62.4, 1602.0], [62.5, 1607.0], [62.6, 1612.0], [62.7, 1621.0], [62.8, 1627.0], [62.9, 1631.0], [63.0, 1636.0], [63.1, 1646.0], [63.2, 1652.0], [63.3, 1661.0], [63.4, 1665.0], [63.5, 1673.0], [63.6, 1683.0], [63.7, 1690.0], [63.8, 1699.0], [63.9, 1711.0], [64.0, 1718.0], [64.1, 1728.0], [64.2, 1736.0], [64.3, 1744.0], [64.4, 1753.0], [64.5, 1764.0], [64.6, 1783.0], [64.7, 1793.0], [64.8, 1803.0], [64.9, 1816.0], [65.0, 1828.0], [65.1, 1838.0], [65.2, 1845.0], [65.3, 1857.0], [65.4, 1866.0], [65.5, 1873.0], [65.6, 1881.0], [65.7, 1893.0], [65.8, 1903.0], [65.9, 1914.0], [66.0, 1921.0], [66.1, 1926.0], [66.2, 1935.0], [66.3, 1945.0], [66.4, 1956.0], [66.5, 1963.0], [66.6, 1971.0], [66.7, 1978.0], [66.8, 1983.0], [66.9, 1987.0], [67.0, 1994.0], [67.1, 1998.0], [67.2, 2005.0], [67.3, 2015.0], [67.4, 2024.0], [67.5, 2029.0], [67.6, 2034.0], [67.7, 2039.0], [67.8, 2046.0], [67.9, 2053.0], [68.0, 2056.0], [68.1, 2061.0], [68.2, 2065.0], [68.3, 2069.0], [68.4, 2072.0], [68.5, 2078.0], [68.6, 2081.0], [68.7, 2083.0], [68.8, 2087.0], [68.9, 2092.0], [69.0, 2094.0], [69.1, 2099.0], [69.2, 2101.0], [69.3, 2105.0], [69.4, 2108.0], [69.5, 2110.0], [69.6, 2115.0], [69.7, 2117.0], [69.8, 2122.0], [69.9, 2126.0], [70.0, 2130.0], [70.1, 2135.0], [70.2, 2138.0], [70.3, 2141.0], [70.4, 2144.0], [70.5, 2146.0], [70.6, 2149.0], [70.7, 2152.0], [70.8, 2154.0], [70.9, 2157.0], [71.0, 2159.0], [71.1, 2161.0], [71.2, 2164.0], [71.3, 2166.0], [71.4, 2169.0], [71.5, 2172.0], [71.6, 2174.0], [71.7, 2176.0], [71.8, 2178.0], [71.9, 2180.0], [72.0, 2184.0], [72.1, 2185.0], [72.2, 2188.0], [72.3, 2190.0], [72.4, 2192.0], [72.5, 2194.0], [72.6, 2196.0], [72.7, 2199.0], [72.8, 2201.0], [72.9, 2203.0], [73.0, 2204.0], [73.1, 2205.0], [73.2, 2206.0], [73.3, 2208.0], [73.4, 2210.0], [73.5, 2210.0], [73.6, 2212.0], [73.7, 2213.0], [73.8, 2216.0], [73.9, 2218.0], [74.0, 2219.0], [74.1, 2222.0], [74.2, 2223.0], [74.3, 2223.0], [74.4, 2225.0], [74.5, 2226.0], [74.6, 2228.0], [74.7, 2230.0], [74.8, 2233.0], [74.9, 2235.0], [75.0, 2238.0], [75.1, 2241.0], [75.2, 2243.0], [75.3, 2245.0], [75.4, 2247.0], [75.5, 2248.0], [75.6, 2250.0], [75.7, 2252.0], [75.8, 2253.0], [75.9, 2254.0], [76.0, 2258.0], [76.1, 2260.0], [76.2, 2263.0], [76.3, 2265.0], [76.4, 2267.0], [76.5, 2270.0], [76.6, 2271.0], [76.7, 2273.0], [76.8, 2274.0], [76.9, 2277.0], [77.0, 2279.0], [77.1, 2282.0], [77.2, 2284.0], [77.3, 2285.0], [77.4, 2287.0], [77.5, 2291.0], [77.6, 2293.0], [77.7, 2294.0], [77.8, 2297.0], [77.9, 2298.0], [78.0, 2300.0], [78.1, 2301.0], [78.2, 2302.0], [78.3, 2303.0], [78.4, 2305.0], [78.5, 2307.0], [78.6, 2309.0], [78.7, 2312.0], [78.8, 2315.0], [78.9, 2319.0], [79.0, 2320.0], [79.1, 2323.0], [79.2, 2325.0], [79.3, 2329.0], [79.4, 2333.0], [79.5, 2336.0], [79.6, 2342.0], [79.7, 2345.0], [79.8, 2348.0], [79.9, 2351.0], [80.0, 2354.0], [80.1, 2357.0], [80.2, 2360.0], [80.3, 2365.0], [80.4, 2368.0], [80.5, 2370.0], [80.6, 2372.0], [80.7, 2375.0], [80.8, 2378.0], [80.9, 2381.0], [81.0, 2385.0], [81.1, 2389.0], [81.2, 2395.0], [81.3, 2399.0], [81.4, 2403.0], [81.5, 2408.0], [81.6, 2410.0], [81.7, 2416.0], [81.8, 2421.0], [81.9, 2439.0], [82.0, 2455.0], [82.1, 2477.0], [82.2, 2492.0], [82.3, 2509.0], [82.4, 2532.0], [82.5, 2560.0], [82.6, 2613.0], [82.7, 2652.0], [82.8, 2724.0], [82.9, 2793.0], [83.0, 3001.0], [83.1, 3050.0], [83.2, 3052.0], [83.3, 3056.0], [83.4, 3059.0], [83.5, 3060.0], [83.6, 3064.0], [83.7, 3065.0], [83.8, 3067.0], [83.9, 3070.0], [84.0, 3072.0], [84.1, 3075.0], [84.2, 3076.0], [84.3, 3077.0], [84.4, 3079.0], [84.5, 3080.0], [84.6, 3081.0], [84.7, 3083.0], [84.8, 3084.0], [84.9, 3085.0], [85.0, 3087.0], [85.1, 3088.0], [85.2, 3089.0], [85.3, 3091.0], [85.4, 3092.0], [85.5, 3093.0], [85.6, 3094.0], [85.7, 3095.0], [85.8, 3097.0], [85.9, 3098.0], [86.0, 3100.0], [86.1, 3100.0], [86.2, 3102.0], [86.3, 3102.0], [86.4, 3104.0], [86.5, 3104.0], [86.6, 3105.0], [86.7, 3107.0], [86.8, 3108.0], [86.9, 3110.0], [87.0, 3110.0], [87.1, 3111.0], [87.2, 3113.0], [87.3, 3115.0], [87.4, 3116.0], [87.5, 3118.0], [87.6, 3120.0], [87.7, 3120.0], [87.8, 3122.0], [87.9, 3123.0], [88.0, 3125.0], [88.1, 3127.0], [88.2, 3129.0], [88.3, 3131.0], [88.4, 3133.0], [88.5, 3134.0], [88.6, 3136.0], [88.7, 3138.0], [88.8, 3141.0], [88.9, 3145.0], [89.0, 3148.0], [89.1, 3149.0], [89.2, 3154.0], [89.3, 3158.0], [89.4, 3160.0], [89.5, 3162.0], [89.6, 3164.0], [89.7, 3165.0], [89.8, 3167.0], [89.9, 3169.0], [90.0, 3169.0], [90.1, 3172.0], [90.2, 3177.0], [90.3, 3179.0], [90.4, 3183.0], [90.5, 3185.0], [90.6, 3187.0], [90.7, 3190.0], [90.8, 3192.0], [90.9, 3194.0], [91.0, 3197.0], [91.1, 3199.0], [91.2, 3201.0], [91.3, 3203.0], [91.4, 3205.0], [91.5, 3207.0], [91.6, 3209.0], [91.7, 3210.0], [91.8, 3212.0], [91.9, 3215.0], [92.0, 3216.0], [92.1, 3219.0], [92.2, 3220.0], [92.3, 3221.0], [92.4, 3223.0], [92.5, 3225.0], [92.6, 3227.0], [92.7, 3229.0], [92.8, 3230.0], [92.9, 3231.0], [93.0, 3232.0], [93.1, 3234.0], [93.2, 3236.0], [93.3, 3238.0], [93.4, 3239.0], [93.5, 3242.0], [93.6, 3243.0], [93.7, 3245.0], [93.8, 3246.0], [93.9, 3249.0], [94.0, 3250.0], [94.1, 3253.0], [94.2, 3256.0], [94.3, 3259.0], [94.4, 3260.0], [94.5, 3263.0], [94.6, 3265.0], [94.7, 3267.0], [94.8, 3272.0], [94.9, 3275.0], [95.0, 3278.0], [95.1, 3281.0], [95.2, 3290.0], [95.3, 3299.0], [95.4, 3305.0], [95.5, 3316.0], [95.6, 3329.0], [95.7, 3372.0], [95.8, 3394.0], [95.9, 3467.0], [96.0, 3491.0], [96.1, 3510.0], [96.2, 3538.0], [96.3, 3568.0], [96.4, 3624.0], [96.5, 3676.0], [96.6, 3798.0], [96.7, 3877.0], [96.8, 3928.0], [96.9, 3976.0], [97.0, 4011.0], [97.1, 4035.0], [97.2, 4088.0], [97.3, 4116.0], [97.4, 4183.0], [97.5, 4264.0], [97.6, 4342.0], [97.7, 4423.0], [97.8, 4633.0], [97.9, 4764.0], [98.0, 4908.0], [98.1, 4971.0], [98.2, 5026.0], [98.3, 5114.0], [98.4, 5187.0], [98.5, 5355.0], [98.6, 5534.0], [98.7, 5990.0], [98.8, 8067.0], [98.9, 9049.0], [99.0, 9052.0], [99.1, 9055.0], [99.2, 9059.0], [99.3, 9068.0], [99.4, 9081.0], [99.5, 9085.0], [99.6, 9093.0], [99.7, 9102.0], [99.8, 9139.0], [99.9, 9160.0], [100.0, 14997.0]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[0.0, 39.0], [0.1, 69.0], [0.2, 91.0], [0.3, 97.0], [0.4, 102.0], [0.5, 107.0], [0.6, 112.0], [0.7, 115.0], [0.8, 117.0], [0.9, 118.0], [1.0, 119.0], [1.1, 120.0], [1.2, 121.0], [1.3, 123.0], [1.4, 124.0], [1.5, 125.0], [1.6, 126.0], [1.7, 127.0], [1.8, 129.0], [1.9, 130.0], [2.0, 132.0], [2.1, 133.0], [2.2, 134.0], [2.3, 135.0], [2.4, 136.0], [2.5, 137.0], [2.6, 138.0], [2.7, 138.0], [2.8, 139.0], [2.9, 140.0], [3.0, 141.0], [3.1, 141.0], [3.2, 142.0], [3.3, 143.0], [3.4, 144.0], [3.5, 145.0], [3.6, 146.0], [3.7, 147.0], [3.8, 147.0], [3.9, 148.0], [4.0, 148.0], [4.1, 149.0], [4.2, 150.0], [4.3, 151.0], [4.4, 152.0], [4.5, 152.0], [4.6, 154.0], [4.7, 154.0], [4.8, 155.0], [4.9, 156.0], [5.0, 157.0], [5.1, 158.0], [5.2, 159.0], [5.3, 160.0], [5.4, 160.0], [5.5, 161.0], [5.6, 161.0], [5.7, 162.0], [5.8, 164.0], [5.9, 164.0], [6.0, 165.0], [6.1, 165.0], [6.2, 166.0], [6.3, 167.0], [6.4, 168.0], [6.5, 168.0], [6.6, 169.0], [6.7, 170.0], [6.8, 170.0], [6.9, 171.0], [7.0, 171.0], [7.1, 172.0], [7.2, 173.0], [7.3, 173.0], [7.4, 174.0], [7.5, 174.0], [7.6, 175.0], [7.7, 176.0], [7.8, 177.0], [7.9, 177.0], [8.0, 178.0], [8.1, 178.0], [8.2, 179.0], [8.3, 180.0], [8.4, 180.0], [8.5, 181.0], [8.6, 181.0], [8.7, 182.0], [8.8, 183.0], [8.9, 183.0], [9.0, 184.0], [9.1, 184.0], [9.2, 185.0], [9.3, 185.0], [9.4, 186.0], [9.5, 186.0], [9.6, 187.0], [9.7, 188.0], [9.8, 189.0], [9.9, 190.0], [10.0, 190.0], [10.1, 191.0], [10.2, 192.0], [10.3, 193.0], [10.4, 193.0], [10.5, 194.0], [10.6, 195.0], [10.7, 196.0], [10.8, 197.0], [10.9, 197.0], [11.0, 198.0], [11.1, 199.0], [11.2, 199.0], [11.3, 200.0], [11.4, 201.0], [11.5, 201.0], [11.6, 202.0], [11.7, 203.0], [11.8, 203.0], [11.9, 204.0], [12.0, 204.0], [12.1, 205.0], [12.2, 205.0], [12.3, 206.0], [12.4, 206.0], [12.5, 207.0], [12.6, 208.0], [12.7, 209.0], [12.8, 210.0], [12.9, 211.0], [13.0, 212.0], [13.1, 213.0], [13.2, 213.0], [13.3, 214.0], [13.4, 215.0], [13.5, 215.0], [13.6, 216.0], [13.7, 217.0], [13.8, 218.0], [13.9, 218.0], [14.0, 219.0], [14.1, 220.0], [14.2, 221.0], [14.3, 222.0], [14.4, 222.0], [14.5, 223.0], [14.6, 225.0], [14.7, 226.0], [14.8, 227.0], [14.9, 227.0], [15.0, 229.0], [15.1, 229.0], [15.2, 230.0], [15.3, 231.0], [15.4, 232.0], [15.5, 233.0], [15.6, 235.0], [15.7, 235.0], [15.8, 236.0], [15.9, 238.0], [16.0, 239.0], [16.1, 240.0], [16.2, 242.0], [16.3, 243.0], [16.4, 244.0], [16.5, 246.0], [16.6, 247.0], [16.7, 248.0], [16.8, 249.0], [16.9, 249.0], [17.0, 251.0], [17.1, 252.0], [17.2, 253.0], [17.3, 255.0], [17.4, 256.0], [17.5, 257.0], [17.6, 258.0], [17.7, 260.0], [17.8, 262.0], [17.9, 263.0], [18.0, 265.0], [18.1, 267.0], [18.2, 268.0], [18.3, 270.0], [18.4, 272.0], [18.5, 273.0], [18.6, 275.0], [18.7, 277.0], [18.8, 280.0], [18.9, 282.0], [19.0, 283.0], [19.1, 285.0], [19.2, 287.0], [19.3, 289.0], [19.4, 292.0], [19.5, 295.0], [19.6, 302.0], [19.7, 305.0], [19.8, 309.0], [19.9, 314.0], [20.0, 318.0], [20.1, 327.0], [20.2, 332.0], [20.3, 336.0], [20.4, 343.0], [20.5, 347.0], [20.6, 357.0], [20.7, 367.0], [20.8, 373.0], [20.9, 381.0], [21.0, 395.0], [21.1, 403.0], [21.2, 412.0], [21.3, 418.0], [21.4, 422.0], [21.5, 426.0], [21.6, 433.0], [21.7, 442.0], [21.8, 447.0], [21.9, 452.0], [22.0, 456.0], [22.1, 459.0], [22.2, 462.0], [22.3, 466.0], [22.4, 469.0], [22.5, 472.0], [22.6, 477.0], [22.7, 478.0], [22.8, 480.0], [22.9, 482.0], [23.0, 485.0], [23.1, 487.0], [23.2, 488.0], [23.3, 491.0], [23.4, 492.0], [23.5, 493.0], [23.6, 496.0], [23.7, 497.0], [23.8, 498.0], [23.9, 500.0], [24.0, 502.0], [24.1, 504.0], [24.2, 506.0], [24.3, 507.0], [24.4, 508.0], [24.5, 509.0], [24.6, 509.0], [24.7, 511.0], [24.8, 512.0], [24.9, 513.0], [25.0, 513.0], [25.1, 515.0], [25.2, 516.0], [25.3, 517.0], [25.4, 518.0], [25.5, 520.0], [25.6, 521.0], [25.7, 522.0], [25.8, 524.0], [25.9, 526.0], [26.0, 527.0], [26.1, 529.0], [26.2, 530.0], [26.3, 532.0], [26.4, 533.0], [26.5, 535.0], [26.6, 537.0], [26.7, 539.0], [26.8, 540.0], [26.9, 541.0], [27.0, 542.0], [27.1, 543.0], [27.2, 545.0], [27.3, 546.0], [27.4, 547.0], [27.5, 550.0], [27.6, 551.0], [27.7, 552.0], [27.8, 553.0], [27.9, 554.0], [28.0, 556.0], [28.1, 558.0], [28.2, 559.0], [28.3, 561.0], [28.4, 562.0], [28.5, 564.0], [28.6, 565.0], [28.7, 567.0], [28.8, 568.0], [28.9, 570.0], [29.0, 571.0], [29.1, 573.0], [29.2, 576.0], [29.3, 577.0], [29.4, 578.0], [29.5, 579.0], [29.6, 581.0], [29.7, 585.0], [29.8, 587.0], [29.9, 590.0], [30.0, 592.0], [30.1, 594.0], [30.2, 597.0], [30.3, 600.0], [30.4, 603.0], [30.5, 605.0], [30.6, 609.0], [30.7, 612.0], [30.8, 613.0], [30.9, 615.0], [31.0, 618.0], [31.1, 623.0], [31.2, 627.0], [31.3, 630.0], [31.4, 633.0], [31.5, 640.0], [31.6, 650.0], [31.7, 655.0], [31.8, 664.0], [31.9, 670.0], [32.0, 675.0], [32.1, 678.0], [32.2, 684.0], [32.3, 694.0], [32.4, 698.0], [32.5, 704.0], [32.6, 709.0], [32.7, 717.0], [32.8, 721.0], [32.9, 727.0], [33.0, 730.0], [33.1, 735.0], [33.2, 740.0], [33.3, 746.0], [33.4, 750.0], [33.5, 752.0], [33.6, 755.0], [33.7, 760.0], [33.8, 764.0], [33.9, 768.0], [34.0, 774.0], [34.1, 777.0], [34.2, 781.0], [34.3, 784.0], [34.4, 789.0], [34.5, 791.0], [34.6, 795.0], [34.7, 799.0], [34.8, 801.0], [34.9, 805.0], [35.0, 807.0], [35.1, 809.0], [35.2, 812.0], [35.3, 815.0], [35.4, 819.0], [35.5, 823.0], [35.6, 824.0], [35.7, 826.0], [35.8, 829.0], [35.9, 832.0], [36.0, 833.0], [36.1, 836.0], [36.2, 840.0], [36.3, 843.0], [36.4, 844.0], [36.5, 845.0], [36.6, 848.0], [36.7, 849.0], [36.8, 851.0], [36.9, 853.0], [37.0, 855.0], [37.1, 859.0], [37.2, 861.0], [37.3, 863.0], [37.4, 864.0], [37.5, 866.0], [37.6, 868.0], [37.7, 872.0], [37.8, 873.0], [37.9, 874.0], [38.0, 876.0], [38.1, 877.0], [38.2, 879.0], [38.3, 881.0], [38.4, 883.0], [38.5, 885.0], [38.6, 887.0], [38.7, 890.0], [38.8, 891.0], [38.9, 893.0], [39.0, 895.0], [39.1, 897.0], [39.2, 900.0], [39.3, 902.0], [39.4, 904.0], [39.5, 905.0], [39.6, 907.0], [39.7, 908.0], [39.8, 910.0], [39.9, 911.0], [40.0, 912.0], [40.1, 914.0], [40.2, 916.0], [40.3, 917.0], [40.4, 919.0], [40.5, 921.0], [40.6, 922.0], [40.7, 923.0], [40.8, 925.0], [40.9, 927.0], [41.0, 929.0], [41.1, 930.0], [41.2, 931.0], [41.3, 933.0], [41.4, 935.0], [41.5, 938.0], [41.6, 939.0], [41.7, 941.0], [41.8, 943.0], [41.9, 944.0], [42.0, 945.0], [42.1, 947.0], [42.2, 948.0], [42.3, 949.0], [42.4, 951.0], [42.5, 953.0], [42.6, 956.0], [42.7, 957.0], [42.8, 959.0], [42.9, 962.0], [43.0, 964.0], [43.1, 965.0], [43.2, 966.0], [43.3, 969.0], [43.4, 972.0], [43.5, 973.0], [43.6, 975.0], [43.7, 977.0], [43.8, 978.0], [43.9, 981.0], [44.0, 984.0], [44.1, 985.0], [44.2, 987.0], [44.3, 989.0], [44.4, 990.0], [44.5, 992.0], [44.6, 994.0], [44.7, 995.0], [44.8, 997.0], [44.9, 998.0], [45.0, 1000.0], [45.1, 1002.0], [45.2, 1004.0], [45.3, 1006.0], [45.4, 1009.0], [45.5, 1011.0], [45.6, 1013.0], [45.7, 1014.0], [45.8, 1017.0], [45.9, 1019.0], [46.0, 1021.0], [46.1, 1023.0], [46.2, 1025.0], [46.3, 1027.0], [46.4, 1029.0], [46.5, 1032.0], [46.6, 1034.0], [46.7, 1036.0], [46.8, 1038.0], [46.9, 1041.0], [47.0, 1043.0], [47.1, 1046.0], [47.2, 1048.0], [47.3, 1050.0], [47.4, 1052.0], [47.5, 1057.0], [47.6, 1059.0], [47.7, 1062.0], [47.8, 1063.0], [47.9, 1064.0], [48.0, 1066.0], [48.1, 1068.0], [48.2, 1070.0], [48.3, 1073.0], [48.4, 1076.0], [48.5, 1078.0], [48.6, 1080.0], [48.7, 1082.0], [48.8, 1084.0], [48.9, 1087.0], [49.0, 1091.0], [49.1, 1094.0], [49.2, 1097.0], [49.3, 1099.0], [49.4, 1101.0], [49.5, 1103.0], [49.6, 1106.0], [49.7, 1107.0], [49.8, 1109.0], [49.9, 1113.0], [50.0, 1117.0], [50.1, 1120.0], [50.2, 1123.0], [50.3, 1124.0], [50.4, 1126.0], [50.5, 1128.0], [50.6, 1130.0], [50.7, 1132.0], [50.8, 1136.0], [50.9, 1138.0], [51.0, 1139.0], [51.1, 1140.0], [51.2, 1143.0], [51.3, 1145.0], [51.4, 1147.0], [51.5, 1150.0], [51.6, 1153.0], [51.7, 1155.0], [51.8, 1157.0], [51.9, 1159.0], [52.0, 1161.0], [52.1, 1163.0], [52.2, 1165.0], [52.3, 1169.0], [52.4, 1172.0], [52.5, 1174.0], [52.6, 1176.0], [52.7, 1180.0], [52.8, 1184.0], [52.9, 1189.0], [53.0, 1192.0], [53.1, 1195.0], [53.2, 1198.0], [53.3, 1201.0], [53.4, 1204.0], [53.5, 1207.0], [53.6, 1209.0], [53.7, 1213.0], [53.8, 1215.0], [53.9, 1218.0], [54.0, 1223.0], [54.1, 1227.0], [54.2, 1229.0], [54.3, 1234.0], [54.4, 1239.0], [54.5, 1248.0], [54.6, 1254.0], [54.7, 1258.0], [54.8, 1263.0], [54.9, 1268.0], [55.0, 1271.0], [55.1, 1275.0], [55.2, 1279.0], [55.3, 1282.0], [55.4, 1285.0], [55.5, 1289.0], [55.6, 1292.0], [55.7, 1296.0], [55.8, 1300.0], [55.9, 1303.0], [56.0, 1307.0], [56.1, 1309.0], [56.2, 1313.0], [56.3, 1316.0], [56.4, 1318.0], [56.5, 1323.0], [56.6, 1325.0], [56.7, 1330.0], [56.8, 1332.0], [56.9, 1335.0], [57.0, 1338.0], [57.1, 1340.0], [57.2, 1343.0], [57.3, 1346.0], [57.4, 1349.0], [57.5, 1351.0], [57.6, 1353.0], [57.7, 1356.0], [57.8, 1360.0], [57.9, 1363.0], [58.0, 1366.0], [58.1, 1369.0], [58.2, 1373.0], [58.3, 1375.0], [58.4, 1377.0], [58.5, 1379.0], [58.6, 1381.0], [58.7, 1383.0], [58.8, 1386.0], [58.9, 1390.0], [59.0, 1392.0], [59.1, 1394.0], [59.2, 1395.0], [59.3, 1397.0], [59.4, 1398.0], [59.5, 1402.0], [59.6, 1403.0], [59.7, 1405.0], [59.8, 1408.0], [59.9, 1410.0], [60.0, 1414.0], [60.1, 1415.0], [60.2, 1417.0], [60.3, 1422.0], [60.4, 1424.0], [60.5, 1426.0], [60.6, 1430.0], [60.7, 1432.0], [60.8, 1434.0], [60.9, 1435.0], [61.0, 1439.0], [61.1, 1441.0], [61.2, 1443.0], [61.3, 1446.0], [61.4, 1447.0], [61.5, 1450.0], [61.6, 1452.0], [61.7, 1455.0], [61.8, 1461.0], [61.9, 1465.0], [62.0, 1469.0], [62.1, 1474.0], [62.2, 1478.0], [62.3, 1482.0], [62.4, 1485.0], [62.5, 1488.0], [62.6, 1493.0], [62.7, 1497.0], [62.8, 1500.0], [62.9, 1507.0], [63.0, 1511.0], [63.1, 1515.0], [63.2, 1517.0], [63.3, 1522.0], [63.4, 1525.0], [63.5, 1529.0], [63.6, 1532.0], [63.7, 1537.0], [63.8, 1541.0], [63.9, 1543.0], [64.0, 1547.0], [64.1, 1552.0], [64.2, 1555.0], [64.3, 1561.0], [64.4, 1564.0], [64.5, 1567.0], [64.6, 1572.0], [64.7, 1576.0], [64.8, 1581.0], [64.9, 1585.0], [65.0, 1591.0], [65.1, 1598.0], [65.2, 1603.0], [65.3, 1613.0], [65.4, 1619.0], [65.5, 1630.0], [65.6, 1643.0], [65.7, 1648.0], [65.8, 1655.0], [65.9, 1665.0], [66.0, 1675.0], [66.1, 1687.0], [66.2, 1696.0], [66.3, 1707.0], [66.4, 1720.0], [66.5, 1735.0], [66.6, 1742.0], [66.7, 1754.0], [66.8, 1761.0], [66.9, 1769.0], [67.0, 1779.0], [67.1, 1793.0], [67.2, 1808.0], [67.3, 1814.0], [67.4, 1823.0], [67.5, 1834.0], [67.6, 1840.0], [67.7, 1848.0], [67.8, 1862.0], [67.9, 1872.0], [68.0, 1879.0], [68.1, 1889.0], [68.2, 1894.0], [68.3, 1900.0], [68.4, 1904.0], [68.5, 1910.0], [68.6, 1919.0], [68.7, 1927.0], [68.8, 1936.0], [68.9, 1938.0], [69.0, 1946.0], [69.1, 1953.0], [69.2, 1959.0], [69.3, 1964.0], [69.4, 1969.0], [69.5, 1972.0], [69.6, 1980.0], [69.7, 1983.0], [69.8, 1988.0], [69.9, 1992.0], [70.0, 1996.0], [70.1, 2001.0], [70.2, 2004.0], [70.3, 2008.0], [70.4, 2012.0], [70.5, 2017.0], [70.6, 2025.0], [70.7, 2032.0], [70.8, 2037.0], [70.9, 2041.0], [71.0, 2045.0], [71.1, 2050.0], [71.2, 2056.0], [71.3, 2059.0], [71.4, 2062.0], [71.5, 2066.0], [71.6, 2068.0], [71.7, 2074.0], [71.8, 2076.0], [71.9, 2079.0], [72.0, 2083.0], [72.1, 2087.0], [72.2, 2092.0], [72.3, 2095.0], [72.4, 2097.0], [72.5, 2101.0], [72.6, 2103.0], [72.7, 2108.0], [72.8, 2111.0], [72.9, 2113.0], [73.0, 2115.0], [73.1, 2117.0], [73.2, 2121.0], [73.3, 2123.0], [73.4, 2125.0], [73.5, 2129.0], [73.6, 2132.0], [73.7, 2134.0], [73.8, 2136.0], [73.9, 2139.0], [74.0, 2141.0], [74.1, 2145.0], [74.2, 2147.0], [74.3, 2150.0], [74.4, 2153.0], [74.5, 2157.0], [74.6, 2159.0], [74.7, 2161.0], [74.8, 2165.0], [74.9, 2168.0], [75.0, 2171.0], [75.1, 2174.0], [75.2, 2176.0], [75.3, 2179.0], [75.4, 2181.0], [75.5, 2182.0], [75.6, 2185.0], [75.7, 2187.0], [75.8, 2188.0], [75.9, 2190.0], [76.0, 2192.0], [76.1, 2194.0], [76.2, 2196.0], [76.3, 2200.0], [76.4, 2202.0], [76.5, 2205.0], [76.6, 2207.0], [76.7, 2211.0], [76.8, 2214.0], [76.9, 2216.0], [77.0, 2218.0], [77.1, 2220.0], [77.2, 2224.0], [77.3, 2226.0], [77.4, 2228.0], [77.5, 2229.0], [77.6, 2231.0], [77.7, 2233.0], [77.8, 2235.0], [77.9, 2238.0], [78.0, 2240.0], [78.1, 2242.0], [78.2, 2244.0], [78.3, 2247.0], [78.4, 2249.0], [78.5, 2250.0], [78.6, 2252.0], [78.7, 2255.0], [78.8, 2257.0], [78.9, 2260.0], [79.0, 2261.0], [79.1, 2264.0], [79.2, 2267.0], [79.3, 2270.0], [79.4, 2273.0], [79.5, 2277.0], [79.6, 2279.0], [79.7, 2284.0], [79.8, 2288.0], [79.9, 2290.0], [80.0, 2295.0], [80.1, 2297.0], [80.2, 2300.0], [80.3, 2303.0], [80.4, 2306.0], [80.5, 2309.0], [80.6, 2312.0], [80.7, 2314.0], [80.8, 2317.0], [80.9, 2320.0], [81.0, 2323.0], [81.1, 2327.0], [81.2, 2329.0], [81.3, 2333.0], [81.4, 2336.0], [81.5, 2340.0], [81.6, 2344.0], [81.7, 2347.0], [81.8, 2349.0], [81.9, 2350.0], [82.0, 2353.0], [82.1, 2357.0], [82.2, 2359.0], [82.3, 2363.0], [82.4, 2366.0], [82.5, 2373.0], [82.6, 2377.0], [82.7, 2381.0], [82.8, 2388.0], [82.9, 2395.0], [83.0, 2407.0], [83.1, 2415.0], [83.2, 2427.0], [83.3, 2443.0], [83.4, 2464.0], [83.5, 2495.0], [83.6, 2508.0], [83.7, 2549.0], [83.8, 2610.0], [83.9, 2637.0], [84.0, 2676.0], [84.1, 2821.0], [84.2, 3038.0], [84.3, 3040.0], [84.4, 3042.0], [84.5, 3043.0], [84.6, 3044.0], [84.7, 3045.0], [84.8, 3046.0], [84.9, 3046.0], [85.0, 3048.0], [85.1, 3049.0], [85.2, 3050.0], [85.3, 3051.0], [85.4, 3052.0], [85.5, 3053.0], [85.6, 3054.0], [85.7, 3054.0], [85.8, 3055.0], [85.9, 3056.0], [86.0, 3057.0], [86.1, 3059.0], [86.2, 3060.0], [86.3, 3060.0], [86.4, 3061.0], [86.5, 3062.0], [86.6, 3063.0], [86.7, 3063.0], [86.8, 3064.0], [86.9, 3065.0], [87.0, 3065.0], [87.1, 3066.0], [87.2, 3067.0], [87.3, 3068.0], [87.4, 3069.0], [87.5, 3070.0], [87.6, 3070.0], [87.7, 3071.0], [87.8, 3071.0], [87.9, 3073.0], [88.0, 3074.0], [88.1, 3074.0], [88.2, 3075.0], [88.3, 3076.0], [88.4, 3077.0], [88.5, 3078.0], [88.6, 3079.0], [88.7, 3079.0], [88.8, 3080.0], [88.9, 3081.0], [89.0, 3082.0], [89.1, 3083.0], [89.2, 3084.0], [89.3, 3085.0], [89.4, 3086.0], [89.5, 3086.0], [89.6, 3087.0], [89.7, 3089.0], [89.8, 3090.0], [89.9, 3091.0], [90.0, 3092.0], [90.1, 3093.0], [90.2, 3094.0], [90.3, 3095.0], [90.4, 3096.0], [90.5, 3097.0], [90.6, 3098.0], [90.7, 3100.0], [90.8, 3102.0], [90.9, 3103.0], [91.0, 3104.0], [91.1, 3105.0], [91.2, 3106.0], [91.3, 3107.0], [91.4, 3110.0], [91.5, 3111.0], [91.6, 3113.0], [91.7, 3115.0], [91.8, 3116.0], [91.9, 3118.0], [92.0, 3122.0], [92.1, 3123.0], [92.2, 3124.0], [92.3, 3126.0], [92.4, 3128.0], [92.5, 3133.0], [92.6, 3137.0], [92.7, 3139.0], [92.8, 3142.0], [92.9, 3145.0], [93.0, 3146.0], [93.1, 3148.0], [93.2, 3151.0], [93.3, 3152.0], [93.4, 3154.0], [93.5, 3156.0], [93.6, 3157.0], [93.7, 3159.0], [93.8, 3161.0], [93.9, 3163.0], [94.0, 3165.0], [94.1, 3166.0], [94.2, 3168.0], [94.3, 3170.0], [94.4, 3172.0], [94.5, 3173.0], [94.6, 3177.0], [94.7, 3180.0], [94.8, 3183.0], [94.9, 3185.0], [95.0, 3186.0], [95.1, 3188.0], [95.2, 3191.0], [95.3, 3193.0], [95.4, 3194.0], [95.5, 3197.0], [95.6, 3199.0], [95.7, 3203.0], [95.8, 3206.0], [95.9, 3209.0], [96.0, 3211.0], [96.1, 3213.0], [96.2, 3214.0], [96.3, 3217.0], [96.4, 3218.0], [96.5, 3220.0], [96.6, 3224.0], [96.7, 3231.0], [96.8, 3235.0], [96.9, 3239.0], [97.0, 3244.0], [97.1, 3253.0], [97.2, 3258.0], [97.3, 3271.0], [97.4, 3282.0], [97.5, 3295.0], [97.6, 3303.0], [97.7, 3337.0], [97.8, 3460.0], [97.9, 3482.0], [98.0, 3539.0], [98.1, 3552.0], [98.2, 3571.0], [98.3, 3618.0], [98.4, 3817.0], [98.5, 3933.0], [98.6, 4091.0], [98.7, 4192.0], [98.8, 4445.0], [98.9, 5017.0], [99.0, 5375.0], [99.1, 7592.0], [99.2, 9042.0], [99.3, 9044.0], [99.4, 9048.0], [99.5, 9052.0], [99.6, 9062.0], [99.7, 9070.0], [99.8, 9078.0], [99.9, 9109.0], [100.0, 21001.0]], "isOverall": false, "label": "01.进入首页", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1096.0, "series": [{"data": [[0.0, 2.0], [100.0, 23.0], [200.0, 139.0], [300.0, 354.0], [400.0, 193.0], [500.0, 81.0], [600.0, 113.0], [700.0, 161.0], [800.0, 119.0], [900.0, 104.0], [1000.0, 207.0], [1100.0, 257.0], [1200.0, 202.0], [1300.0, 207.0], [1400.0, 238.0], [1500.0, 225.0], [1600.0, 265.0], [1700.0, 205.0], [1800.0, 264.0], [1900.0, 264.0], [2000.0, 252.0], [2100.0, 213.0], [2200.0, 200.0], [2300.0, 235.0], [2400.0, 182.0], [2500.0, 195.0], [2600.0, 151.0], [2700.0, 159.0], [2800.0, 167.0], [2900.0, 139.0], [3000.0, 159.0], [3100.0, 166.0], [3300.0, 324.0], [3200.0, 206.0], [3400.0, 220.0], [3500.0, 180.0], [3700.0, 147.0], [3600.0, 184.0], [3800.0, 132.0], [3900.0, 100.0], [4000.0, 106.0], [4300.0, 148.0], [4100.0, 121.0], [4200.0, 135.0], [4400.0, 148.0], [4500.0, 132.0], [4600.0, 114.0], [4800.0, 37.0], [4700.0, 55.0], [4900.0, 43.0], [5000.0, 44.0], [5100.0, 70.0], [5300.0, 194.0], [5200.0, 92.0], [5500.0, 119.0], [5400.0, 166.0], [5600.0, 42.0], [5800.0, 20.0], [5700.0, 22.0], [5900.0, 15.0], [6100.0, 142.0], [6000.0, 22.0], [6300.0, 110.0], [6200.0, 166.0], [6500.0, 15.0], [6600.0, 12.0], [6400.0, 31.0], [6800.0, 6.0], [6900.0, 8.0], [6700.0, 6.0], [7000.0, 19.0], [7100.0, 13.0], [7300.0, 7.0], [7200.0, 10.0], [7400.0, 4.0], [7600.0, 7.0], [7500.0, 5.0], [7800.0, 4.0], [7900.0, 4.0], [7700.0, 5.0], [8000.0, 7.0], [8100.0, 4.0], [8400.0, 5.0], [8300.0, 4.0], [8200.0, 5.0], [8500.0, 4.0], [8700.0, 1.0], [8600.0, 1.0], [8900.0, 3.0], [9100.0, 4.0], [8800.0, 1.0], [9000.0, 1.0], [9200.0, 1.0], [9400.0, 1.0], [9700.0, 5.0], [9600.0, 4.0], [9500.0, 2.0], [9800.0, 3.0], [10100.0, 3.0], [10200.0, 2.0], [9900.0, 6.0], [10000.0, 9.0], [10300.0, 5.0], [10400.0, 5.0], [10500.0, 9.0], [10700.0, 2.0], [10600.0, 3.0], [11200.0, 9.0], [10800.0, 3.0], [11000.0, 6.0], [11100.0, 4.0], [11300.0, 12.0], [11400.0, 4.0], [11500.0, 1.0], [11600.0, 3.0], [12100.0, 61.0], [12200.0, 21.0], [12000.0, 3.0], [12300.0, 5.0], [13100.0, 1.0], [13000.0, 1.0], [14600.0, 1.0], [14900.0, 1.0], [15100.0, 1.0], [15400.0, 1.0], [15600.0, 2.0], [17100.0, 1.0], [16500.0, 2.0], [18200.0, 1.0], [17900.0, 1.0], [24300.0, 1.0], [24200.0, 1.0]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[0.0, 29.0], [600.0, 191.0], [700.0, 249.0], [800.0, 566.0], [900.0, 736.0], [1000.0, 534.0], [1100.0, 446.0], [1200.0, 342.0], [1300.0, 423.0], [1400.0, 451.0], [1500.0, 267.0], [1600.0, 147.0], [1700.0, 95.0], [1800.0, 100.0], [1900.0, 135.0], [2000.0, 202.0], [2100.0, 358.0], [2200.0, 525.0], [2300.0, 335.0], [2400.0, 91.0], [2500.0, 37.0], [2600.0, 18.0], [2700.0, 13.0], [2800.0, 3.0], [2900.0, 6.0], [3000.0, 300.0], [3100.0, 515.0], [3200.0, 417.0], [3300.0, 49.0], [3400.0, 24.0], [3500.0, 33.0], [3600.0, 15.0], [3700.0, 8.0], [3800.0, 12.0], [3900.0, 26.0], [4000.0, 27.0], [4100.0, 16.0], [4300.0, 12.0], [4200.0, 13.0], [4400.0, 7.0], [4500.0, 4.0], [4600.0, 6.0], [4700.0, 9.0], [4800.0, 7.0], [4900.0, 18.0], [5000.0, 11.0], [5100.0, 12.0], [5300.0, 6.0], [5200.0, 6.0], [5400.0, 6.0], [5600.0, 5.0], [5500.0, 4.0], [5700.0, 2.0], [5900.0, 1.0], [7100.0, 1.0], [7300.0, 3.0], [7200.0, 1.0], [7400.0, 1.0], [7600.0, 1.0], [7900.0, 1.0], [8000.0, 2.0], [8200.0, 1.0], [8600.0, 1.0], [8400.0, 1.0], [9000.0, 84.0], [9100.0, 25.0], [10800.0, 1.0], [13700.0, 1.0], [13800.0, 1.0], [14500.0, 1.0], [14800.0, 1.0], [14400.0, 1.0], [14900.0, 2.0], [100.0, 778.0], [200.0, 448.0], [300.0, 133.0], [400.0, 157.0], [500.0, 484.0]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[0.0, 32.0], [600.0, 213.0], [700.0, 234.0], [800.0, 444.0], [900.0, 580.0], [1000.0, 434.0], [1100.0, 394.0], [1200.0, 251.0], [1300.0, 367.0], [1400.0, 334.0], [1500.0, 236.0], [1600.0, 108.0], [1700.0, 93.0], [1800.0, 113.0], [1900.0, 178.0], [2000.0, 239.0], [2100.0, 380.0], [2200.0, 389.0], [2300.0, 277.0], [2400.0, 62.0], [2500.0, 24.0], [2600.0, 23.0], [2700.0, 5.0], [2800.0, 7.0], [2900.0, 3.0], [3000.0, 651.0], [3100.0, 494.0], [3200.0, 192.0], [3300.0, 24.0], [3400.0, 16.0], [3500.0, 33.0], [3600.0, 7.0], [3700.0, 5.0], [3800.0, 6.0], [3900.0, 9.0], [4000.0, 8.0], [4300.0, 4.0], [4200.0, 3.0], [4100.0, 11.0], [4600.0, 1.0], [4400.0, 1.0], [4500.0, 1.0], [4700.0, 2.0], [4900.0, 5.0], [5000.0, 3.0], [5100.0, 5.0], [5200.0, 2.0], [5300.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [7300.0, 3.0], [7400.0, 1.0], [7500.0, 3.0], [9000.0, 75.0], [9100.0, 10.0], [14200.0, 1.0], [14100.0, 1.0], [15200.0, 1.0], [21000.0, 1.0], [100.0, 1096.0], [200.0, 827.0], [300.0, 152.0], [400.0, 279.0], [500.0, 642.0]], "isOverall": false, "label": "01.进入首页", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8312.0, "series": [{"data": [[1.0, 8312.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 3942.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7745.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 66.83675464320623, "minX": 1.56699486E12, "maxY": 100.0, "series": [{"data": [[1.56699492E12, 100.0], [1.5669954E12, 100.0], [1.5669951E12, 100.0], [1.56699504E12, 100.0], [1.56699552E12, 66.83675464320623], [1.56699522E12, 100.0], [1.56699516E12, 100.0], [1.56699486E12, 100.0], [1.56699534E12, 100.0], [1.56699528E12, 100.0], [1.56699498E12, 100.0], [1.56699546E12, 99.58407079646027]], "isOverall": false, "label": "商品详情场景", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.56699552E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 44.333333333333336, "minX": 1.0, "maxY": 9258.0, "series": [{"data": [[2.0, 91.5], [3.0, 108.33333333333333], [4.0, 104.0], [5.0, 169.0], [6.0, 192.0], [7.0, 199.0], [8.0, 171.0], [9.0, 166.0], [10.0, 260.6666666666667], [12.0, 260.6666666666667], [13.0, 231.0], [14.0, 180.0], [15.0, 326.5], [16.0, 328.0], [17.0, 285.0], [18.0, 320.0], [19.0, 240.0], [20.0, 230.0], [21.0, 172.0], [22.0, 368.0], [23.0, 418.5], [24.0, 387.0], [25.0, 416.0], [26.0, 390.0], [27.0, 395.0], [28.0, 318.85714285714283], [29.0, 143.0], [30.0, 525.75], [31.0, 794.0], [33.0, 683.6], [32.0, 465.0], [35.0, 432.5], [34.0, 367.0], [37.0, 292.3333333333333], [36.0, 319.0], [39.0, 702.0], [38.0, 208.0], [41.0, 966.25], [40.0, 936.0], [43.0, 795.0], [42.0, 1151.0], [45.0, 1115.0], [44.0, 1465.0], [47.0, 293.5], [46.0, 421.0], [49.0, 1823.0], [48.0, 268.0], [51.0, 1321.5], [50.0, 2891.5], [53.0, 4927.0], [52.0, 2805.714285714286], [55.0, 9258.0], [54.0, 3455.0], [57.0, 3286.0], [56.0, 3325.833333333333], [59.0, 1422.5], [58.0, 3257.0], [61.0, 2350.375], [60.0, 1750.0], [63.0, 788.0], [62.0, 1215.0], [67.0, 629.2], [66.0, 642.0], [65.0, 698.3333333333334], [64.0, 860.5], [71.0, 3945.0], [70.0, 3929.6], [69.0, 4869.25], [68.0, 3185.2], [75.0, 2307.4], [74.0, 2137.6666666666665], [73.0, 1590.5], [72.0, 3298.6666666666665], [79.0, 2515.3333333333335], [78.0, 3344.75], [77.0, 712.0], [76.0, 744.25], [83.0, 2335.4], [82.0, 1921.75], [81.0, 2591.0], [80.0, 4180.75], [87.0, 2818.5], [86.0, 1799.0], [85.0, 2747.0], [84.0, 1248.0], [91.0, 2079.6451612903224], [90.0, 5416.333333333333], [89.0, 5222.25], [88.0, 414.6], [95.0, 5413.5], [94.0, 5233.25], [93.0, 1692.1666666666667], [92.0, 3092.583333333333], [99.0, 2959.367346938775], [98.0, 4019.533333333334], [97.0, 2791.5757575757575], [96.0, 3006.326530612245], [100.0, 3096.9566550375357], [1.0, 105.0]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[98.7393, 3058.2183999999993]], "isOverall": false, "label": "事务控制器-Aggregated", "isController": true}, {"data": [[2.0, 51.5], [3.0, 55.0], [4.0, 49.0], [5.0, 83.5], [6.0, 71.0], [7.0, 69.0], [8.0, 69.0], [9.0, 66.0], [10.0, 141.66666666666666], [12.0, 134.66666666666666], [13.0, 130.0], [14.0, 111.0], [15.0, 142.5], [16.0, 140.0], [17.0, 140.0], [18.0, 135.5], [19.0, 113.75], [20.0, 110.0], [21.0, 84.5], [22.0, 201.0], [23.0, 197.0], [24.0, 194.0], [25.0, 191.0], [26.0, 189.0], [27.0, 181.0], [28.0, 160.71428571428572], [29.0, 83.0], [30.0, 200.25], [31.0, 234.0], [33.0, 224.4], [32.0, 231.0], [35.0, 209.5], [34.0, 219.0], [37.0, 137.33333333333334], [36.0, 201.0], [39.0, 344.5], [38.0, 92.25], [41.0, 578.25], [40.0, 594.0], [43.0, 521.0], [42.0, 530.5], [45.0, 353.5], [44.0, 508.0], [47.0, 139.5], [46.0, 144.0], [49.0, 1568.5], [48.0, 98.66666666666667], [51.0, 666.0], [50.0, 812.6666666666666], [53.0, 547.0], [52.0, 581.4285714285714], [55.0, 209.0], [54.0, 234.5], [57.0, 121.0], [56.0, 138.33333333333334], [59.0, 1173.5], [58.0, 112.5], [61.0, 950.0000000000001], [60.0, 1150.0], [63.0, 560.0], [62.0, 855.0], [67.0, 453.4], [66.0, 495.0], [65.0, 519.3333333333334], [64.0, 541.5], [71.0, 3120.0], [70.0, 3217.6], [69.0, 3243.5], [68.0, 2038.8], [75.0, 404.0], [74.0, 520.0], [73.0, 605.0], [72.0, 1437.3333333333335], [79.0, 2185.3333333333335], [78.0, 1610.25], [77.0, 186.0], [76.0, 226.75], [83.0, 1155.0], [82.0, 1530.75], [81.0, 2124.0], [80.0, 2152.875], [87.0, 681.75], [86.0, 877.0], [85.0, 903.0], [84.0, 1008.5], [91.0, 984.4193548387096], [90.0, 3114.0], [89.0, 3124.0], [88.0, 223.2], [95.0, 3249.0], [94.0, 3264.5], [93.0, 1042.7666666666667], [92.0, 1962.9166666666667], [99.0, 1444.1836734693873], [98.0, 2290.1], [97.0, 1431.2121212121215], [96.0, 1552.3265306122446], [100.0, 1641.4927582196842], [1.0, 59.0]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[98.7393, 1617.5375999999985]], "isOverall": false, "label": "02查看商品详情-Aggregated", "isController": false}, {"data": [[3.0, 44.333333333333336], [9.0, 54.0], [12.0, 130.0], [13.0, 121.0], [14.0, 93.25], [18.0, 126.75], [19.0, 114.0], [20.0, 101.0], [21.0, 69.0], [25.0, 190.0], [26.0, 187.5], [27.0, 181.0], [28.0, 124.8888888888889], [33.0, 222.5], [35.0, 205.8], [37.0, 112.0], [36.0, 186.25], [39.0, 62.0], [41.0, 558.3333333333334], [43.0, 511.0], [45.0, 233.11111111111111], [44.0, 499.0], [47.0, 118.0], [49.0, 848.0], [48.0, 96.33333333333333], [51.0, 666.0], [50.0, 679.0], [53.0, 321.83333333333337], [52.0, 576.2], [55.0, 177.33333333333334], [56.0, 145.4], [59.0, 1159.0], [58.0, 6068.333333333334], [61.0, 939.75], [63.0, 559.0], [62.0, 708.0], [67.0, 440.25], [65.0, 502.0], [71.0, 3101.0], [70.0, 3184.1428571428573], [68.0, 152.0], [75.0, 293.7], [73.0, 582.0], [79.0, 2167.0], [78.0, 670.4545454545454], [76.0, 211.5], [83.0, 1194.5], [82.0, 1632.8], [81.0, 2105.75], [80.0, 2158.0], [87.0, 498.0], [86.0, 851.75], [85.0, 904.0], [84.0, 992.1666666666666], [91.0, 511.3499999999999], [90.0, 3079.2], [88.0, 197.8], [94.0, 222.0], [93.0, 922.1923076923078], [92.0, 2220.7000000000003], [99.0, 1449.5360824742268], [98.0, 2458.470588235294], [97.0, 1346.2888888888892], [96.0, 915.8863636363636], [100.0, 1455.840390879488], [1.0, 46.0]], "isOverall": false, "label": "01.进入首页", "isController": false}, {"data": [[99.02070000000015, 1440.6807000000067]], "isOverall": false, "label": "01.进入首页-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1622.3333333333333, "minX": 1.56699486E12, "maxY": 1168529.8166666667, "series": [{"data": [[1.56699492E12, 1147775.2], [1.5669954E12, 1091026.5666666667], [1.5669951E12, 1124484.6833333333], [1.56699504E12, 1137964.7166666666], [1.56699552E12, 446224.73333333334], [1.56699522E12, 1102461.5666666667], [1.56699516E12, 1122266.35], [1.56699486E12, 1073872.0166666666], [1.56699534E12, 1101903.8666666667], [1.56699528E12, 1061395.5333333334], [1.56699498E12, 1168529.8166666667], [1.56699546E12, 1101196.7833333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.56699492E12, 4178.833333333333], [1.5669954E12, 3971.8333333333335], [1.5669951E12, 4094.483333333333], [1.56699504E12, 4144.016666666666], [1.56699552E12, 1622.3333333333333], [1.56699522E12, 4014.0666666666666], [1.56699516E12, 4086.0], [1.56699486E12, 3912.55], [1.56699534E12, 4012.5666666666666], [1.56699528E12, 3864.4], [1.56699498E12, 4253.95], [1.56699546E12, 4009.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.56699552E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 952.4444444444445, "minX": 1.56699486E12, "maxY": 3241.489313835769, "series": [{"data": [[1.56699492E12, 3241.489313835769], [1.5669954E12, 3157.167616875714], [1.5669951E12, 2899.604444444444], [1.56699504E12, 3016.5275330396476], [1.56699552E12, 2092.653250773994], [1.56699522E12, 3205.717741935487], [1.56699516E12, 3008.9235159817345], [1.56699486E12, 3130.733934611049], [1.56699534E12, 3124.817861339599], [1.56699528E12, 3169.6924910607863], [1.56699498E12, 2961.9673913043466], [1.56699546E12, 3095.2935034802776]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[1.56699492E12, 1710.276431718059], [1.5669954E12, 1683.2297921478055], [1.5669951E12, 1578.4768361581916], [1.56699504E12, 1532.8024691358034], [1.56699552E12, 1015.4494680851047], [1.56699522E12, 1663.7456846950504], [1.56699516E12, 1539.0835214446959], [1.56699486E12, 1794.9330085261895], [1.56699534E12, 1666.4171494785633], [1.56699528E12, 1708.5119331742235], [1.56699498E12, 1545.1560818083951], [1.56699546E12, 1649.6728110599056]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[1.56699492E12, 1520.9157427937912], [1.5669954E12, 1458.7857142857138], [1.5669951E12, 1366.4994375703052], [1.56699504E12, 1503.9734806629826], [1.56699552E12, 952.4444444444445], [1.56699522E12, 1521.864367816093], [1.56699516E12, 1450.9604519773993], [1.56699486E12, 1355.36259977195], [1.56699534E12, 1514.9634703196357], [1.56699528E12, 1399.3456937799047], [1.56699498E12, 1433.5071193866377], [1.56699546E12, 1498.3935558112773]], "isOverall": false, "label": "01.进入首页", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.56699552E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 698.4567901234569, "minX": 1.56699486E12, "maxY": 2413.004767580453, "series": [{"data": [[1.56699492E12, 2136.592800899888], [1.5669954E12, 2356.041049030788], [1.5669951E12, 2091.5311111111114], [1.56699504E12, 2098.159691629954], [1.56699552E12, 1566.7151702786377], [1.56699522E12, 2312.1808755760353], [1.56699516E12, 2265.3675799086727], [1.56699486E12, 1926.977452085681], [1.56699534E12, 2396.1586368977687], [1.56699528E12, 2413.004767580453], [1.56699498E12, 2057.527173913043], [1.56699546E12, 2268.7354988399084]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[1.56699492E12, 1137.6685022026406], [1.5669954E12, 1271.5496535796772], [1.5669951E12, 1184.7096045197725], [1.56699504E12, 1068.8350168350162], [1.56699552E12, 743.231382978723], [1.56699522E12, 1216.2761795166862], [1.56699516E12, 1204.4785553047425], [1.56699486E12, 1102.7137637028013], [1.56699534E12, 1302.2468134414821], [1.56699528E12, 1349.6241050119343], [1.56699498E12, 1123.7556512378885], [1.56699546E12, 1264.578341013824]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[1.56699492E12, 980.4368070953437], [1.5669954E12, 1043.7166276346595], [1.5669951E12, 951.0303712036005], [1.56699504E12, 1038.635359116023], [1.56699552E12, 698.4567901234569], [1.56699522E12, 1091.204597701151], [1.56699516E12, 1040.8101694915242], [1.56699486E12, 830.5906499429885], [1.56699534E12, 1165.751141552512], [1.56699528E12, 983.3636363636357], [1.56699498E12, 959.7086527929896], [1.56699546E12, 1065.5845799769852]], "isOverall": false, "label": "01.进入首页", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.56699552E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 269.6921322690993, "minX": 1.56699486E12, "maxY": 1515.868891537547, "series": [{"data": [[1.56699492E12, 981.138357705287], [1.5669954E12, 1478.6009122006847], [1.5669951E12, 1013.1055555555554], [1.56699504E12, 1137.8931718061674], [1.56699552E12, 948.2538699690396], [1.56699522E12, 1389.737327188941], [1.56699516E12, 1238.641552511418], [1.56699486E12, 751.1082299887257], [1.56699534E12, 1388.0846063454762], [1.56699528E12, 1515.868891537547], [1.56699498E12, 956.8097826086954], [1.56699546E12, 1203.9547563805113]], "isOverall": false, "label": "事务控制器", "isController": true}, {"data": [[1.56699492E12, 505.1266519823787], [1.5669954E12, 767.1489607390301], [1.5669951E12, 579.7197740112987], [1.56699504E12, 510.56341189674504], [1.56699552E12, 409.80319148936167], [1.56699522E12, 701.4729574223252], [1.56699516E12, 573.0259593679458], [1.56699486E12, 463.5676004872112], [1.56699534E12, 704.4159907300124], [1.56699528E12, 812.6682577565641], [1.56699498E12, 497.88051668460656], [1.56699546E12, 617.1451612903228]], "isOverall": false, "label": "02查看商品详情", "isController": false}, {"data": [[1.56699492E12, 466.11862527716187], [1.5669954E12, 696.2576112412181], [1.5669951E12, 459.32283464566893], [1.56699504E12, 649.7414364640887], [1.56699552E12, 480.743827160494], [1.56699522E12, 700.9137931034486], [1.56699516E12, 655.1581920903959], [1.56699486E12, 269.6921322690993], [1.56699534E12, 739.3812785388129], [1.56699528E12, 600.9844497607647], [1.56699498E12, 482.65717415114983], [1.56699546E12, 615.4602991944763]], "isOverall": false, "label": "01.进入首页", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.56699552E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.56699486E12, "maxY": 15248.0, "series": [{"data": [[1.56699492E12, 15248.0], [1.5669954E12, 9062.0], [1.5669951E12, 9055.0], [1.56699504E12, 9132.0], [1.56699552E12, 9054.0], [1.56699522E12, 9057.0], [1.56699516E12, 9068.0], [1.56699486E12, 14997.0], [1.56699534E12, 9102.0], [1.56699528E12, 9162.0], [1.56699498E12, 9052.0], [1.56699546E12, 14155.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.56699492E12, 102.0], [1.5669954E12, 104.0], [1.5669951E12, 100.0], [1.56699504E12, 111.0], [1.56699552E12, 39.0], [1.56699522E12, 101.0], [1.56699516E12, 84.0], [1.56699486E12, 95.0], [1.56699534E12, 89.0], [1.56699528E12, 97.0], [1.56699498E12, 104.0], [1.56699546E12, 94.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.56699492E12, 3085.0], [1.5669954E12, 3123.0], [1.5669951E12, 3091.0], [1.56699504E12, 3088.0], [1.56699552E12, 3123.0], [1.56699522E12, 3110.0], [1.56699516E12, 3098.0], [1.56699486E12, 3102.1000000000004], [1.56699534E12, 3117.0], [1.56699528E12, 3114.0], [1.56699498E12, 3084.0], [1.56699546E12, 3124.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.56699492E12, 9011.809999999943], [1.5669954E12, 9047.0], [1.5669951E12, 5725.739999999994], [1.56699504E12, 7593.0599999999995], [1.56699552E12, 9041.0], [1.56699522E12, 5428.8000000000175], [1.56699516E12, 5682.27], [1.56699486E12, 5412.719999999999], [1.56699534E12, 9044.57], [1.56699528E12, 7588.559999999925], [1.56699498E12, 7347.959999999999], [1.56699546E12, 9042.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.56699492E12, 3562.5499999999997], [1.5669954E12, 3238.8499999999985], [1.5669951E12, 3213.949999999999], [1.56699504E12, 3224.0], [1.56699552E12, 3236.0], [1.56699522E12, 3224.5], [1.56699516E12, 3211.0], [1.56699486E12, 3652.6499999999987], [1.56699534E12, 3232.0], [1.56699528E12, 3228.0], [1.56699498E12, 3246.3499999999995], [1.56699546E12, 3238.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.56699552E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 559.5, "minX": 11.0, "maxY": 21001.0, "series": [{"data": [[11.0, 559.5], [27.0, 1132.0], [28.0, 1255.0], [29.0, 1165.5], [30.0, 1263.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[29.0, 21001.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 11.0, "maxY": 569.0, "series": [{"data": [[11.0, 198.0], [27.0, 404.5], [28.0, 569.0], [29.0, 465.5], [30.0, 470.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[29.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.566666666666666, "minX": 1.56699486E12, "maxY": 31.733333333333334, "series": [{"data": [[1.56699492E12, 30.283333333333335], [1.5669954E12, 27.783333333333335], [1.5669951E12, 30.716666666666665], [1.56699504E12, 28.95], [1.56699552E12, 11.566666666666666], [1.56699522E12, 29.733333333333334], [1.56699516E12, 28.15], [1.56699486E12, 28.65], [1.56699534E12, 29.75], [1.56699528E12, 27.283333333333335], [1.56699498E12, 31.733333333333334], [1.56699546E12, 28.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.56699552E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.56699486E12, "maxY": 30.7, "series": [{"data": [[1.56699492E12, 30.166666666666668], [1.5669954E12, 28.666666666666668], [1.5669951E12, 29.566666666666666], [1.56699504E12, 29.933333333333334], [1.56699552E12, 11.666666666666666], [1.56699522E12, 28.983333333333334], [1.56699516E12, 29.5], [1.56699486E12, 28.3], [1.56699534E12, 28.983333333333334], [1.56699528E12, 27.9], [1.56699498E12, 30.7], [1.56699546E12, 28.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.56699516E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.56699552E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.56699486E12, "maxY": 15.483333333333333, "series": [{"data": [[1.56699492E12, 15.133333333333333], [1.5669954E12, 14.433333333333334], [1.5669951E12, 14.75], [1.56699504E12, 14.85], [1.56699552E12, 6.266666666666667], [1.56699522E12, 14.483333333333333], [1.56699516E12, 14.766666666666667], [1.56699486E12, 13.683333333333334], [1.56699534E12, 14.383333333333333], [1.56699528E12, 13.966666666666667], [1.56699498E12, 15.483333333333333], [1.56699546E12, 14.466666666666667]], "isOverall": false, "label": "02查看商品详情-success", "isController": false}, {"data": [[1.56699492E12, 14.816666666666666], [1.5669954E12, 14.616666666666667], [1.5669951E12, 15.0], [1.56699504E12, 15.133333333333333], [1.56699552E12, 5.383333333333334], [1.56699522E12, 14.466666666666667], [1.56699516E12, 14.583333333333334], [1.56699486E12, 14.783333333333333], [1.56699534E12, 14.183333333333334], [1.56699528E12, 13.983333333333333], [1.56699498E12, 15.333333333333334], [1.56699546E12, 14.366666666666667]], "isOverall": false, "label": "事务控制器-success", "isController": true}, {"data": [[1.56699516E12, 0.016666666666666666]], "isOverall": false, "label": "事务控制器-failure", "isController": true}, {"data": [[1.56699516E12, 0.016666666666666666]], "isOverall": false, "label": "01.进入首页-failure", "isController": false}, {"data": [[1.56699492E12, 15.033333333333333], [1.5669954E12, 14.233333333333333], [1.5669951E12, 14.816666666666666], [1.56699504E12, 15.083333333333334], [1.56699552E12, 5.4], [1.56699522E12, 14.5], [1.56699516E12, 14.733333333333333], [1.56699486E12, 14.616666666666667], [1.56699534E12, 14.6], [1.56699528E12, 13.933333333333334], [1.56699498E12, 15.216666666666667], [1.56699546E12, 14.483333333333333]], "isOverall": false, "label": "01.进入首页-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.56699552E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
